{"version":3,"file":"component---src-pages-before-implement-delivery-api-overview-notifications-md-51c82a95475e46868602.js","mappings":"wRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iBADR,kBAGA,iIACA,wIAAyH,uBAAYC,WAAW,KAAvB,cAAzH,2DAA0O,uBAAYA,WAAW,KAAvB,cAA1O,sHACA,eACE,GAAM,uCADR,wCAGA,8JAA+I,uBAAYA,WAAW,KAAvB,SAA/I,QAAwM,uBAAYA,WAAW,KAAvB,WAAxM,+BAA0R,uBAAYA,WAAW,KAAvB,QAA1R,sEAAgZ,uBAAYA,WAAW,KAAvB,MAAhZ,uIAAqkB,uBAAYA,WAAW,KAAvB,aAArkB,4EAAssB,uBAAYA,WAAW,KAAvB,SAAtsB,QAA+vB,uBAAYA,WAAW,KAAvB,WAA/vB,uDACA,qBAAK,iBAAMA,WAAW,OAAjB,2kDA0DL,0FAA2E,uBAAYA,WAAW,KAAvB,iBAA3E,yCACA,qBAAK,iBAAMA,WAAW,OAAjB,+aAqBL,iCAAkB,uBAAYA,WAAW,KAAvB,iBAAlB,2EAAsJ,uBAAYA,WAAW,KAAvB,iBAAtJ,0CAAyP,uBAAYA,WAAW,KAAvB,iBAAzP,KAAuT,uBAAYA,WAAW,KAAvB,MAAvT,iCAAsY,uBAAYA,WAAW,KAAvB,gBAAtY,oGAAkiB,uBAAYA,WAAW,KAAvB,gBAAliB,wIACA,eACE,GAAM,sCADR,uCAGA,8JAA+I,uBAAYA,WAAW,KAAvB,SAA/I,QAAwM,uBAAYA,WAAW,KAAvB,WAAxM,qGAAgW,uBAAYA,WAAW,KAAvB,MAAhW,wNAAsmB,uBAAYA,WAAW,KAAvB,SAAtmB,QAA+pB,uBAAYA,WAAW,KAAvB,WAA/pB,uDACA,qBAAK,iBAAMA,WAAW,OAAjB,gyCA+CL,0FAA2E,uBAAYA,WAAW,KAAvB,iBAA3E,yCACA,qBAAK,iBAAMA,WAAW,OAAjB,yZAqBL,iCAAkB,uBAAYA,WAAW,KAAvB,iBAAlB,2EAAsJ,uBAAYA,WAAW,KAAvB,iBAAtJ,0CAAyP,uBAAYA,WAAW,KAAvB,iBAAzP,KAAuT,uBAAYA,WAAW,KAAvB,MAAvT,4RAGH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/before-implement/delivery-api-overview/notifications.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"notifications\"\n    }}>{`Notifications`}</h1>\n    <p>{`Notifications should be fired when a prefetched mbox or view has been visited or rendered to the end user.`}</p>\n    <p>{`In order for notifications to be fired off for the right mbox or view, be sure to keep track of the corresponding `}<inlineCode parentName=\"p\">{`eventToken`}</inlineCode>{` for each mbox or view. Notifications with the correct `}<inlineCode parentName=\"p\">{`eventToken`}</inlineCode>{` for the corresponding mboxes or views are required to be fired in order for reporting to be reflected correctly.`}</p>\n    <h2 {...{\n      \"id\": \"notifications-for-prefetched-mboxes\"\n    }}>{`Notifications for Prefetched Mboxes`}</h2>\n    <p>{`One or multiple notifications can be sent via a single delivery call. Determine whether the metric that needs to be tracked is either a `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` for each mbox so that the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` of the notification can be reflected correctly. Also, pass in an `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` for each notification so that one can determine whether a notification was sent correctly thru the Adobe Target Delivery API. The `}<inlineCode parentName=\"p\">{`timestamp`}</inlineCode>{` is also important to be forwarded to Adobe Target to indicate when the `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` occurred for a given mbox for reporting purposes.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=10abf6304b2714215b1fd39a870f01afc#1555632114' \\\\\n-H 'Content-Type: application/json' \\\\\n-H 'cache-control: no-cache' \\\\\n-d '{\n    \"id\": {\n      \"tntId\": \"abcdefghijkl00023.1_1\"\n    },\n    \"context\": {\n      \"channel\": \"web\",\n      \"browser\" : {\n        \"host\" : \"demo\"\n      },\n      \"address\" : {\n        \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n      },\n      \"screen\" : {\n        \"width\" : 1200,\n        \"height\": 1400\n      }\n    },\n      \"notifications\": [\n      {\n      \"id\" : \"SummerOfferNotification\",\n        \"timestamp\" : 1555705311051,\n        \"type\" : \"display\",\n        \"mbox\" : {\n          \"name\" :\"SummerOffer\"   \n        },\n        \"tokens\" : [\n          \"GcvBXDhdJFNR9E9r1tgjfmqipfsIHvVzTQxHolz2IpSCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q\"\n        ]\n      },\n    {\n      \"id\" : \"SummerShoesOfferNotification\",\n        \"timestamp\" : 1555705311051,\n        \"type\" : \"display\",\n        \"mbox\" : {\n          \"name\" :\"SummerShoesOffer\"   \n        },\n        \"tokens\" : [\n          \"GcvBXDhdJFNR9E9r1tgjfmqipfsIHvVzTQxHolz2IpSCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q\"\n        ]\n      },\n    {\n      \"id\" : \"SummerDressOfferNotification\",\n        \"timestamp\" : 1555705311051,\n        \"type\" : \"display\",\n        \"mbox\" : {\n          \"name\" :\"SummerDressOffer\"   \n        },\n        \"tokens\" : [\n          \"GcvBXDhdJFNR9E9r1tgjfmqipfsIHvVzTQxHolz2IpSCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q\"\n        ]\n    } \n    ]\n  }'\n`}</code></pre>\n    <p>{`The example call above will result in a response that indicates the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` request was successfully processed.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"status\": 200,\n  \"requestId\": \"36014eed-4772-4c48-a9e2-e532762b6a85\",\n  \"client\": \"demo\",\n  \"id\": {\n      \"tntId\": \"abcdefghijkl00023.28_20\"\n  },\n  \"edgeHost\": \"mboxedge28.tt.omtrdc.net\",\n  \"notifications\": [\n      {\n          \"id\": \"SummerOfferNotification\"\n      },\n      {\n          \"id\": \"SummerDressOfferNotification\"\n      },\n      {\n          \"id\": \"SummerShoesOfferNotification\"\n      }\n  ]\n}\n`}</code></pre>\n    <p>{`If all the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` sent to Adobe Target are correctly processed, they will appear in the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` array in the response. However, if a `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is missing, that particular `}<inlineCode parentName=\"p\">{`notification`}</inlineCode>{` did not go through. In this scenario, a retry logic could be put into place until a successful `}<inlineCode parentName=\"p\">{`notification`}</inlineCode>{` response is retrieved. Ensure the retry logic has a timeout specified so the API call does not block and cause performance delays.`}</p>\n    <h2 {...{\n      \"id\": \"notifications-for-prefetched-views\"\n    }}>{`Notifications for Prefetched Views`}</h2>\n    <p>{`One or multiple notifications can be sent via a single delivery call. Determine whether the metric that needs to be tracked is either a `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` for each mbox so that the type of the notification can be reflected correctly. Also, pass in an `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` for each notification so that one can determine whether a notification was sent correctly thru the Adobe Target Delivery API. The timestamp is also important to be forwarded to Adobe Target to indicate when the `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` occurred for a given view for reporting purposes.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n  'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=d359570e04f14e1faeeba02d6ab9914e' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'cache-control: no-cache' \\\\\n  -d '{\n  \"id\": {\n    \"tntId\": \"84e8d0e211054f18af365d65f45e902b.28_131\"\n  },\n  \"context\": {\n    \"channel\": \"web\",\n    \"browser\": {\n      \"host\": \"target.enablementadobe.com\"\n    },\n    \"address\": {\n      \"url\": \"https://target.enablementadobe.com/react/demo/#/\"\n    }\n  },\n  \"notifications\": [{\n      \"id\": \"228\",\n      \"type\": \"display\",\n      \"timestamp\": 1556226121884,\n      \"tokens\": [\"N3C13I0M2PH8iaKtONJlFJNWHtnQtQrJfmRrQugEa2qCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q==\"],\n      \"view\": {\n        \"name\": \"checkout-express\",\n      }\n    },\n    {\n      \"id\": \"5\",\n      \"type\": \"display\",\n      \"timestamp\": 1556226121884,\n      \"tokens\": [\"N3C13I0M2PH8iaKtONJlFJNWHtnQtQrJfmRrQugEa2qCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q==\"],\n      \"view\": {\n        \"name\": \"home\",\n      }\n    },\n    {\n      \"id\": \"6\",\n      \"type\": \"display\",\n      \"timestamp\": 1556226121884,\n      \"tokens\": [\"N3C13I0M2PH8iaKtONJlFJNWHtnQtQrJfmRrQugEa2qCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q==\"],\n      \"view\": {\n        \"name\": \"products\",\n      }\n    }\n  ]\n}'\n`}</code></pre>\n    <p>{`The example call above will result in a response that indicates the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` request was successfully processed.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"status\": 200,\n    \"requestId\": \"85cc7394-c19a-4398-9b8b-bbee1e4c4579\",\n    \"client\": \"demo\",\n    \"id\": {\n        \"tntId\": \"84e8d0e211054f18af365d65f45e902b.28_131\"\n    },\n    \"edgeHost\": \"mboxedge28.tt.omtrdc.net\",\n    \"notifications\": [\n        {\n            \"id\": \"5\"\n        },\n        {\n            \"id\": \"6\"\n        },\n        {\n            \"id\": \"228\"\n        }\n    ]\n}\n`}</code></pre>\n    <p>{`If all the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` sent to Adobe Target are correctly processed, they will appear in the `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` array in the response. However, if a `}<inlineCode parentName=\"p\">{`notifications`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is missing, that particular notification did not go through. In this scenario, a retry logic could be put into place until a successful notification response is retrieved. Ensure the retry logic has a timeout specified so the API call does not block and cause performance delays.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}