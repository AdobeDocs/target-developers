{"version":3,"file":"component---src-pages-implement-server-side-sdk-guides-best-practices-when-to-use-md-b2cb4230161e12c52c1a.js","mappings":"wRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iDADR,kDAGA,eACE,GAAM,yEADR,0EAGA,mBAAG,iBAAMC,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WAPf,YAUC,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,SACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAnBtB,QAsBH,oBAASA,WAAW,QAApB,gBACQ,mBAAQA,WAAW,UACnB,OAAU,CAAC,wFAAyF,wFAAyF,yFAA0F,yFAA0F,yFAA0F,0FAC3c,MAAS,oCACT,KAAQ,eAJhB,gBAMQ,mBAAQA,WAAW,UACnB,OAAU,CAAC,uFAAwF,uFAAwF,wFAAyF,wFAAyF,wFAAyF,yFACtc,MAAS,oCACT,KAAQ,eAThB,gBAWQ,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,kFACP,IAAO,YACP,MAAS,YACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OA5BlB,cAtBG,YAuDH,kDAAmC,eAAIA,WAAW,KAAf,aAAnC,+sCACA,6lCACA,eACE,GAAM,sBADR,uBAGA,8HAA+G,cAAGA,WAAW,IACzH,KAAQ,kDADmG,YAA/G,uLAKH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/server-side/sdk-guides/best-practices/when-to-use.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"when-to-use-on-device-versus-edge-decisioning\"\n    }}>{`When to use on-device versus edge decisioning`}</h1>\n    <h2 {...{\n      \"id\": \"consider-use-cases-when-deciding-whether-to-use-on-device-decisioning\"\n    }}>{`Consider use cases when deciding whether to use on-device decisioning`}</h2>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"56.25%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/5530d/comparison.webp 320w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/0c8fb/comparison.webp 640w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/94b1e/comparison.webp 1280w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/0b34d/comparison.webp 1920w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/d5269/comparison.webp 2560w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/d6bb8/comparison.webp 4000w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/8980b/comparison.jpg 320w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/56d4e/comparison.jpg 640w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/62aaf/comparison.jpg 1280w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/aaf92/comparison.jpg 1920w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/36eba/comparison.jpg 2560w\", \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/120d2/comparison.jpg 4000w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/jpeg\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/target-developers/static/5a58d65c3857352f17c11cdd8d05154b/62aaf/comparison.jpg\",\n            \"alt\": \"alt image\",\n            \"title\": \"alt image\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The main difference between `}<em parentName=\"p\">{`on-device`}</em>{` decisioning and edge decisioning is that on-device decisioning executes decisions locally on your servers, while edge decisions are made on Adobe Target's Edge network. On-device decisioning should be used for any A/B or XT activities that need to be delivered on highly trafficked pages, where performance greatly impacts your business KPIs such as conversion, revenue, and retention. For example, suppose your marketing team is running ad campaigns to attract prospects to your home page. Running ad campaigns on publisher networks requires payment, therefore any prospect that lands on your home page translates to a dollar amount. At the same time, suppose you are running A/B experiments to see which hero image best captures your consumer's attention. If delivering those A/B experiments takes an additional 2 seconds, there is a high likelihood the consumer will become impatient and bounce. There go your marketing dollars and A/B experiments! Losing this hard-earned prospect is difficult, since any opportunity of converting this prospect to a loyal or repeat customer is now forfeited. Therefore, running an on-device decisioning activity for this use case can avoid any negative impact that latency can introduce.`}</p>\n    <p>{`On the other hand, edge decisioning requires a network blocking call to retrieve an experience, but can be highly beneficial, since real-time data and ML can be used to make the end user experience highly engaging. A network blocking call will introduce additional latency when delivering the experience; however, in some scenarios, this trade-off may make sense. For example, consider a scenario in which a customer is browsing through your product catalog, and suppose they navigate to a product details page. If that page shows a recommended list of products, along with the product the customer is currently viewing, this can boost engagement—and later, conversion and revenue. While showing the recommended list of products in this way would require an edge decision influenced by Adobe Target's ML algorithm—meaning there would be added latency—that added latency would not be significant enough for the end user to bounce. Furthermore, a recommended list of products translates to a higher conversion rate. Therefore, in this case, an edge decision provides your business the most value.`}</p>\n    <h2 {...{\n      \"id\": \"supported-features\"\n    }}>{`Supported Features`}</h2>\n    <p>{`In addition to assessing your use cases and business goals, review which features on-device decisioning `}<a parentName=\"p\" {...{\n        \"href\": \"../on-device-decisioning/supported-features.md\"\n      }}>{`supports`}</a>{` before deciding whether to use on-device decisioning versus edge decisioning. Currently, edge decisioning supports all activity types, audience targeting, and allocation methods.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}