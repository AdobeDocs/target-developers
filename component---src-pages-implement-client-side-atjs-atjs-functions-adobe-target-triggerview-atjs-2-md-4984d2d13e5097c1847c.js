"use strict";(self.webpackChunktarget_developers=self.webpackChunktarget_developers||[]).push([[4119],{69160:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return u}});var a,r=t(87462),i=t(63366),o=(t(15007),t(64983)),l=t(91515),d=["components"],m={},p=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),s={_frontmatter:m},g=l.Z;function u(e){var n=e.components,t=(0,i.Z)(e,d);return(0,o.mdx)(g,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"adobetargettriggerview-viewname-options---atjs-2x"},"adobe.target.triggerView (viewName, options) - at.js 2.x"),(0,o.mdx)("p",null,"This function can be called whenever a new page is loaded or when a component on a page is re-rendered. ",(0,o.mdx)("inlineCode",{parentName:"p"},"adobe.target.triggerView()")," should be implemented for single page applications (SPAs) in order to use the Visual Experience Composer (VEC) to create A/B Tests and Experience Targeting (XT) activities. If ",(0,o.mdx)("inlineCode",{parentName:"p"},"adobe.target.triggerView()")," is not implemented on the site, the VEC cannot be utilized for SPA. For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"/target-developers/src/pages/implement/client-side/atjs/how-to-deployatjs/target-atjs-single-page-application.md"},"Single Page Application implementation"),"."),(0,o.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"This function was introduced with at.js 2.x. This function is not available for at.js version 1.",(0,o.mdx)("em",{parentName:"p"},"x"),"."),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Required?"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"viewName"),(0,o.mdx)("td",{parentName:"tr",align:null},"String"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes"),(0,o.mdx)("td",{parentName:"tr",align:null},"Pass in any name as a string type that you want to represent your view. This view name appears in the Modifications panel of the VEC for marketers to create actions and run their A/B and XT activities.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"options"),(0,o.mdx)("td",{parentName:"tr",align:null},"Object"),(0,o.mdx)("td",{parentName:"tr",align:null},"No"),(0,o.mdx)("td",{parentName:"tr",align:null})),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"options > page"),(0,o.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,o.mdx)("td",{parentName:"tr",align:null},"No"),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("strong",{parentName:"td"},"TRUE:")," Default value of page is true. When page=true, notifications are sent to the Target backend for incrementing impression count.",(0,o.mdx)("br",null),"A notification is always sent by default when a ",(0,o.mdx)("inlineCode",{parentName:"td"},"triggerView")," is called, except when options > page is set to false.",(0,o.mdx)("br",null),(0,o.mdx)("strong",{parentName:"td"},"FALSE:")," When page=false, notifications are not sent for incrementing impression count. This should be used when you want to only re-render a component on a page with an offer.",(0,o.mdx)("br",null),(0,o.mdx)("strong",{parentName:"td"},"Note"),": Custom Code offers in the VEC are not re-rendered when ",(0,o.mdx)("inlineCode",{parentName:"td"},"triggerView()")," is called with ",(0,o.mdx)("inlineCode",{parentName:"td"},"{page: false}")," as the option.")))),(0,o.mdx)("h2",{id:"example-true"},"Example: True"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"triggerView()")," call to send a notification to the Target backend for incrementing activity impressions and other metrics."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'adobe.target.triggerView("homeView")\n')),(0,o.mdx)("h2",{id:"example-false"},"Example: False"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"triggerView()")," call to not have notifications sent to the Target backend for impression counting."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'adobe.target.triggerView("homeView", {page: false})\n')),(0,o.mdx)("h2",{id:"example-promise-chaining-with-getoffers-and-applyoffers"},"Example: Promise chaining with ",(0,o.mdx)("inlineCode",{parentName:"h2"},"getoffers()")," and ",(0,o.mdx)("inlineCode",{parentName:"h2"},"applyOffers()")),(0,o.mdx)("p",null,"To execute ",(0,o.mdx)("inlineCode",{parentName:"p"},"triggerView()")," when the ",(0,o.mdx)("inlineCode",{parentName:"p"},"getOffers()")," promise is resolved, it is important to execute ",(0,o.mdx)("inlineCode",{parentName:"p"},"triggerView()")," on the final block, as shown in the example below. This is necessary for the VEC to detect ",(0,o.mdx)("inlineCode",{parentName:"p"},"Views")," in authoring mode. "),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript",metastring:'{line-numbers="true"}',"{line-numbers":'"true"}'},"adobe.target.getOffers({\n    'request': {\n        'prefetch': {\n            'views': [{\n                'parameters': {}\n            }]\n        }\n    }\n}).then(function(response) {\n    // Apply Offers\n    adobe.target.applyOffers({\n        response: response\n    });\n}).catch(function(error) {\n    console.log(\"AT: getOffers failed - Error\", error);\n}).finally(() => {\n    // Trigger View call, assuming pageView is defined elsewhere\n    adobe.target.triggerView(pageView, {\n        page: true\n    });\n    console.log('AT: View triggered on : ' + pageView);\n});\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-implement-client-side-atjs-atjs-functions-adobe-target-triggerview-atjs-2-md-4984d2d13e5097c1847c.js.map