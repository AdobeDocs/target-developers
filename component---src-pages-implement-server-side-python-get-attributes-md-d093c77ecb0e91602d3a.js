"use strict";(self.webpackChunktarget_developers=self.webpackChunktarget_developers||[]).push([[556],{92009:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return o},default:function(){return g}});var a,r=n(87462),d=n(63366),l=(n(15007),n(64983)),m=n(91515),i=["components"],o={},s=(a="CodeBlock",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),p={_frontmatter:o},u=m.Z;function g(e){var t=e.components,n=(0,d.Z)(e,i);return(0,l.mdx)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"get-attributes"},"Get Attributes"),(0,l.mdx)("h2",{id:"description"},"Description"),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"get_attributes()")," is used to fetch experimentation and personalized experiences from Target and extract attribute values."),(0,l.mdx)("h2",{id:"method"},"Method"),(0,l.mdx)(s,{slots:"heading, code",repeat:"1",languages:"python",mdxType:"CodeBlock"}),(0,l.mdx)("h3",{id:"getattributes"},"getAttributes"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"target_client_instance.get_attributes(mbox_names, options)\n")),(0,l.mdx)("h2",{id:"parameters"},"Parameters"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Name"),(0,l.mdx)("th",{parentName:"tr",align:null},"Type"),(0,l.mdx)("th",{parentName:"tr",align:null},"Required"),(0,l.mdx)("th",{parentName:"tr",align:null},"Default"),(0,l.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"mbox_names"),(0,l.mdx)("td",{parentName:"tr",align:null},"list","[str]"),(0,l.mdx)("td",{parentName:"tr",align:null},"Yes"),(0,l.mdx)("td",{parentName:"tr",align:null},"None"),(0,l.mdx)("td",{parentName:"tr",align:null},"A list of mbox names")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"options"),(0,l.mdx)("td",{parentName:"tr",align:null},"dict"),(0,l.mdx)("td",{parentName:"tr",align:null},"No"),(0,l.mdx)("td",{parentName:"tr",align:null},"None"),(0,l.mdx)("td",{parentName:"tr",align:null},"The same options as used for ",(0,l.mdx)("a",{parentName:"td",href:"/target-developers/get-offers.md"},"Get Offersâ€‹"))))),(0,l.mdx)("h2",{id:"attributesprovider"},"AttributesProvider"),(0,l.mdx)("p",null,"The ",(0,l.mdx)("inlineCode",{parentName:"p"},"AttributesProvider")," returned by ",(0,l.mdx)("inlineCode",{parentName:"p"},"target_client.get_attributes()")," has the following methods:"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Method"),(0,l.mdx)("th",{parentName:"tr",align:null},"Return Type"),(0,l.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"get_value(mbox_name, key)"),(0,l.mdx)("td",{parentName:"tr",align:null},"any"),(0,l.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"as_object(mbox_name)"),(0,l.mdx)("td",{parentName:"tr",align:null},"dict"),(0,l.mdx)("td",{parentName:"tr",align:null},"Returns a simple json object with key value pairs")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"get_response()"),(0,l.mdx)("td",{parentName:"tr",align:null},(0,l.mdx)("a",{parentName:"td",href:"https://github.com/adobe/target-python-sdk/blob/main/target_python_sdk/types/target_delivery_response.py"},"TargetDeliveryResponse")),(0,l.mdx)("td",{parentName:"tr",align:null},"Returns the response object normally returned by ",(0,l.mdx)("inlineCode",{parentName:"td"},"get_offers"))))),(0,l.mdx)("h2",{id:"example"},"Example"),(0,l.mdx)(s,{slots:"heading, code",repeat:"1",languages:"python",mdxType:"CodeBlock"}),(0,l.mdx)("h3",{id:"python"},"Python"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'def client_ready_callback():\n    context = Context(channel=ChannelType.WEB)\n    mboxes = [MboxRequest(name="a1-serverside-ab", index=1)]\n    execute = ExecuteRequest(mboxes=mboxes)\n    delivery_request = DeliveryRequest(context=context, execute=execute)\n\n    get_attributes_options = {\n      "request": delivery_request\n    }\n\n    attributes_provider = target_client.get_attributes(["demo-engineering-flags"], get_attributes_options)\n    # returns just the value of searchProviderId from the demo-engineering-flags mbox offer\n    search_provider_id = attributes_provider.get_value("demo-engineering-flags", "searchProviderId")\n\n    # returns a simple dict object representing the demo-engineering-flags mbox offer\n    engineering_flags = attributes_provider.as_object("demo-engineering-flags")\n    """  the value of engineeringFlags looks like this\n        {\n            "cdnHostname": "cdn.cloud.corp.net",\n            "searchProviderId": 143,\n            "hasLegacyAccess": false\n        }\n    """\n\n    asset_url = "http://{}/path/to/asset".format(engineering_flags.get("cdnHostname"))\n\n\nclient_options = {\n    "client": "acmeclient",\n    "organization_id": "1234567890@AdobeOrg",\n    "events": {\n        "client_ready": client_ready_callback\n    }\n}\ntarget_client = TargetClient.create(client_options)\n')))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-implement-server-side-python-get-attributes-md-d093c77ecb0e91602d3a.js.map