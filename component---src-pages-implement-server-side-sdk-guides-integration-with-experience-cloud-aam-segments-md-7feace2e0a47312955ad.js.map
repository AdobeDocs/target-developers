{"version":3,"file":"component---src-pages-implement-server-side-sdk-guides-integration-with-experience-cloud-aam-segments-md-7feace2e0a47312955ad.js","mappings":"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","sources":["webpack://target-developers/./src/pages/implement/server-side/sdk-guides/integration-with-experience-cloud/aam-segments.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"aam-segments\"\n    }}>{`AAM segments`}</h1>\n    <p>{`Adobe Audience Manager segments can be leveraged via Adobe Target SDKs. In order to leverage AAM segments, the following fields need to be provided:`}</p>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{`: AAM segments are not supported for on-device decisioning activities.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`locationHint`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DCS Location Hint is used to determine which AAM DCS Endpoint to hit in order to retrieve the profile. Must be >= 1.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`marketingCloudVisitorId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Marketing Cloud Visitor ID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`blob`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`AAM Blob is used to send additional data to AAM. Must not be blank and the size <= 1024.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The SDK will automatically populate these fields for you when making a `}<inlineCode parentName=\"p\">{`getOffers`}</inlineCode>{` method call, but you will need to ensure a valid visitor cookie is provided. In order to get this cookie, you need to implement VisitorAPI.js in the browser.`}</p>\n    <h2 {...{\n      \"id\": \"implementation-guide\"\n    }}>{`Implementation Guide`}</h2>\n    <h3 {...{\n      \"id\": \"use-of-cookies\"\n    }}>{`Use of Cookies`}</h3>\n    <p>{`Cookies are used to correlate Adobe Audience Manager requests with Adobe Target requests. These are the cookies used in this implementation.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Cookie`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`visitor cookie`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`AMCVS_XXXXXXXXXXXXXXXXXXXXXXXX%40AdobeOrg`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This cookie is set by `}<inlineCode parentName=\"td\">{`VisitorAPI.js`}</inlineCode>{` when it is initialized with `}<inlineCode parentName=\"td\">{`visitorState`}</inlineCode>{` from the target `}<inlineCode parentName=\"td\">{`getOffers`}</inlineCode>{` response.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`target cookie`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mbox`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Your web server must set this cookie using the name and value of `}<inlineCode parentName=\"td\">{`targetCookie`}</inlineCode>{` from the target `}<inlineCode parentName=\"td\">{`getOffers`}</inlineCode>{` response.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"overview-of-steps\"\n    }}>{`Overview of steps`}</h3>\n    <p>{`Suppose a user enters a URL into a browser which sends a request to your web server. When fulfilling that request...`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The server reads the visitor and target cookies from the request.`}</li>\n      <li parentName=\"ol\">{`The server makes a call to the `}<inlineCode parentName=\"li\">{`getOffers`}</inlineCode>{` method of the Target SDK, specifying the visitor and target cookies if available.`}</li>\n      <li parentName=\"ol\">{`When the `}<inlineCode parentName=\"li\">{`getOffers`}</inlineCode>{` call is fulfilled, values for `}<inlineCode parentName=\"li\">{`targetCookie`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`visitorState`}</inlineCode>{` from the response are used.`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`A cookie is set on the response with values taken from `}<inlineCode parentName=\"li\">{`targetCookie`}</inlineCode>{`. This is done using the `}<inlineCode parentName=\"li\">{`Set-Cookie`}</inlineCode>{` response header, which tells the browser to persist the target cookie.`}</li>\n          <li parentName=\"ol\">{`An HTML response is prepared that initializes `}<inlineCode parentName=\"li\">{`VisitorAPI.js`}</inlineCode>{` and passes in `}<inlineCode parentName=\"li\">{`visitorState`}</inlineCode>{` from the target response.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`The HTML response is loaded in the browser...`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\"><inlineCode parentName=\"li\">{`VisitorAPI.js`}</inlineCode>{` is included in the document header.`}</li>\n          <li parentName=\"ol\">{`VisitorAPI is initialized with `}<inlineCode parentName=\"li\">{`visitorState`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`getOffers`}</inlineCode>{` SDK response. This will cause the visitor cookie to be set in the browser so it will be sent to the server on subsequent requests.`}</li>\n        </ol>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"example-code\"\n    }}>{`Example code`}</h3>\n    <p>{`The following code sample implements each of the steps outlined above. Each step appears in the code as an inline comment next to its implementation.`}</p>\n    <h4 {...{\n      \"id\": \"nodejs\"\n    }}>{`Node.js`}</h4>\n    <p>{`This sample relies on `}<a parentName=\"p\" {...{\n        \"href\": \"https://expressjs.com/\"\n      }}>{`express, a Node.js web framework`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`server.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`const fs = require(\"fs\");\nconst express = require(\"express\");\nconst cookieParser = require(\"cookie-parser\");\nconst Handlebars = require(\"handlebars\");\nconst TargetClient = require(\"@adobe/target-nodejs-sdk\");\n\nconst CONFIG = {\n  client: \"acmeclient\",\n  organizationId: \"1234567890@AdobeOrg\",\n  timeout: 10000,\n  logger: console,\n};\nconst targetClient = TargetClient.create(CONFIG);\nconst TEMPLATE = fs.readFileSync(\\`\\${__dirname}/index.handlebars\\`).toString();\nconst handlebarsTemplate = Handlebars.compile(TEMPLATE);\n\nHandlebars.registerHelper(\"toJSON\", function (object) {\n  return new Handlebars.SafeString(JSON.stringify(object, null, 4));\n});\n\nconst app = express();\napp.use(cookieParser());\napp.use(express.static(__dirname + \"/public\"));\n\napp.get(\"/\", async (req, res) => {\n  // The server reads the visitor and target cookies from the request.\n  const visitorCookie =\n    req.cookies[\n      encodeURIComponent(\n        TargetClient.getVisitorCookieName(CONFIG.organizationId)\n      )\n    ];\n  const targetCookie = req.cookies[TargetClient.TargetCookieName];\n  const address = { url: req.headers.host + req.originalUrl };\n\n  const targetRequest = {\n    execute: {\n      mboxes: [\n        { name: \"homepage\", index: 1, address },\n        { name: \"SummerShoesOffer\", index: 2, address },\n        { name: \"SummerDressOffer\", index: 3, address }\n      ],\n    },\n  };\n\n  res.set({\n    \"Content-Type\": \"text/html\",\n    Expires: new Date().toUTCString(),\n  });\n\n  try {\n    // The server makes a call to the \\`getOffers\\` method of the Target SDK specifying the visitor and target cookies if available.\n    const targetResponse = await targetClient.getOffers({\n      request: targetRequest,\n      visitorCookie,\n      targetCookie,\n    });\n\n    // When the \\`getOffers\\` call is fulfilled, values for \\`targetCookie\\` and \\`visitorState\\` from the response are used.\n    // A cookie is set on the response with values taken from \\`targetCookie\\`.  This is done using the \\`Set-Cookie\\` response header which tells the browser to persist the target cookie.\n    res.cookie(\n      targetResponse.targetCookie.name,\n      targetResponse.targetCookie.value,\n      { maxAge: targetResponse.targetCookie.maxAge * 1000 }\n    );\n\n    // An HTML response is prepared that initializes VisitorAPI.js and passes in \\`visitorState\\` from the target response.\n    const html = handlebarsTemplate({\n      organizationId: CONFIG.organizationId,\n      targetResponse,\n    });\n\n    res.status(200).send(html);\n  } catch (error) {\n    console.error(\"Target:\", error);\n    res.status(500).send(error);\n  }\n});\n\napp.listen(3000, function () {\n  console.log(\"Listening on port 3000 and watching!\");\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`index.handlebars`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`<!doctype html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>ECID (Visitor API) Integration Sample</title>\n\n  <!-- VisitorAPI.js is included in the document header. -->\n  <script src=\"VisitorAPI.js\"></script>\n  <script>\n    // VisitorAPI is initialized with visitorState from the \\`getOffers\\` SDK response. This will cause the visitor cookie to be set in the browser so it will be sent to the server on subsequent requests.\n    Visitor.getInstance(\"{{organizationId}}\", {serverState: {{toJSON targetResponse.visitorState}} });\n  </script>\n</head>\n<body>\n  <h1>response</h1>\n  <pre>{{toJSON targetResponse}}</pre>\n</body>\n</html>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`This sample uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://spring.io/\"\n      }}>{`spring, a Java web framework`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`ClientSampleApplication.java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`@SpringBootApplication\npublic class ClientSampleApplication {\n\n    public static void main(String[] args) {\n        System.setProperty(SimpleLogger.DEFAULT_LOG_LEVEL_KEY, \"DEBUG\");\n        SpringApplication.run(ClientSampleApplication.class, args);\n    }\n\n    @Bean\n    TargetClient marketingCloudClient() {\n        ClientConfig clientConfig = ClientConfig.builder()\n                .client(\"acmeclient\")\n                .organizationId(\"1234567890@AdobeOrg\")\n                .defaultDecisioningMethod(DecisioningMethod.SERVER_SIDE)\n                .build();\n\n        return TargetClient.create(clientConfig);\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`TargetController.java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`@Controller\n@RequestMapping(\"/\")\npublic class TargetController {\n\n    @Autowired\n    private TargetClientService targetClientService;\n\n    @GetMapping\n    public String index(Model model, HttpServletRequest request, HttpServletResponse response) {\n        // The server reads the visitor and target cookies from the request.\n        List<TargetCookie> targetCookies = getTargetCookies(request.getCookies());\n\n        Address address = getAddress(request);\n\n        List<MboxRequest> mboxRequests = new ArrayList<>();\n        mboxRequests.add((MboxRequest) new MboxRequest().name(\"homepage\").index(1).address(address));\n        mboxRequests.add((MboxRequest) new MboxRequest().name(\"SummerShoesOffer\").index(2).address(address));\n        mboxRequests.add((MboxRequest) new MboxRequest().name(\"SummerDressOffer\").index(3).address(address));\n\n        TargetDeliveryResponse targetDeliveryResponse = targetClientService.getOffers(mboxRequests, targetCookies, request,\n                response);\n\n        // An HTML response is prepared that initializes VisitorAPI.js and passes in \\`visitorState\\` from the target response.\n        model.addAttribute(\"visitorState\", targetDeliveryResponse.getVisitorState());\n        model.addAttribute(\"targetResponse\", targetDeliveryResponse);\n        model.addAttribute(\"organizationId\", \"1234567890@AdobeOrg\");\n\n        return \"index\";\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`TargetClientService.java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`@Service\npublic class TargetClientService {\n\n    private final TargetClient targetJavaClient;\n\n    public TargetClientService(TargetClient targetJavaClient) {\n        this.targetJavaClient = targetJavaClient;\n    }\n\n    public TargetDeliveryResponse getOffers(List<MboxRequest> executeMboxes, List<TargetCookie> cookies, HttpServletRequest request, HttpServletResponse response) {\n\n        Context context = getContext(request);\n        ExecuteRequest executeRequest = new ExecuteRequest();\n        executeRequest.setMboxes(executeMboxes);\n\n        TargetDeliveryRequest targetDeliveryRequest = TargetDeliveryRequest.builder()\n                .context(context)\n                .execute(executeRequest)\n                .cookies(cookies)\n                .build();\n\n        // The server makes a call to the \\`getOffers\\` method of the Target SDK specifying the visitor and target cookies if available.\n        TargetDeliveryResponse targetResponse = targetJavaClient.getOffers(targetDeliveryRequest);\n\n        // When the \\`getOffers\\` call is fulfilled, values for \\`targetCookie\\` and \\`visitorState\\` from the response are used.\n        // A cookie is set on the response with values taken from \\`targetCookie\\`.  This is done using the \\`Set-Cookie\\` response header which tells the browser to persist the target cookie.\n        setCookies(targetResponse.getCookies(), response);\n        return targetResponse;\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"../../java/utility-methods.md\"\n        }}>{`TargetRequestUtils.java`}</a></strong></p>\n    <p>{`index.html`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<!DOCTYPE HTML>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Target Only : GetOffer</title>\n\n    <!-- VisitorAPI.js is included in the document header. -->\n    <script src=\"../../js/VisitorAPI.js\"></script>\n    <script th:inline=\"javascript\">\n        // VisitorAPI is initialized with visitorState from the \\`getOffers\\` SDK response. This will cause the visitor cookie to be set in the browser so it will be sent to the server on subsequent requests.\n        Visitor.getInstance(/*[[\\${organizationId}]]*/ \"\", {serverState: /*[[\\${visitorState}]]*/ {}});\n    </script>\n</head>\n<body>\n    <h1>response</h1>\n    <pre>[[\\${targetResponse}]]</pre>\n</body>\n</html>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}