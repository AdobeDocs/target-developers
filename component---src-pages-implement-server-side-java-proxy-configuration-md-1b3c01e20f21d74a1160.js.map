{"version":3,"file":"component---src-pages-implement-server-side-java-proxy-configuration-md-1b3c01e20f21d74a1160.js","mappings":"+MAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,uBADR,wBAGA,eACE,GAAM,eADR,gBAGA,sGAAuF,uBAAYC,WAAW,KAAvB,gBAAvF,uEACA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,OAAOJ,QAAQ,eACrE,eACE,GAAM,sBADR,uBAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,iBADZ,oQASL,eACE,GAAM,kBADR,mBAGA,gHAAiG,uBAAYA,WAAW,KAAvB,qBAAjG,yHACA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,OAAOJ,QAAQ,eACrE,eACE,GAAM,8BADR,+BAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,iBADZ,qRAWR,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/server-side/java/proxy-configuration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"proxy-configuration\"\n    }}>{`Proxy Configuration`}</h1>\n    <h2 {...{\n      \"id\": \"basic-proxy\"\n    }}>{`Basic Proxy`}</h2>\n    <p>{`If the application running the SDK requires a proxy to access the internet, the `}<inlineCode parentName=\"p\">{`TargetClient`}</inlineCode>{` will need to be configured with a proxy configuration as follows.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Java\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"basic-proxy-config\"\n    }}>{`Basic Proxy Config`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ClientConfig clientConfig = ClientConfig.builder()\n    .client(\"acmeclient\")\n    .organizationId(\"1234567890@AdobeOrg\")\n    .proxyConfig(new ClientProxyConfig(host,port))\n    .build();\nTargetClient targetClient = TargetClient.create(clientConfig);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h2>\n    <p>{`If a proxy authentication is required, the credentials can be passed as parameters to the `}<inlineCode parentName=\"p\">{`ClientProxyConfig`}</inlineCode>{` constructor, as per the below example. Note that this only works for simple username/password proxy authentication.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Java\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"basic-proxy-authentication\"\n    }}>{`Basic Proxy Authentication`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`ClientConfig clientConfig = ClientConfig.builder()\n    .client(\"acmeclient\")\n    .organizationId(\"1234567890@AdobeOrg\")\n    .proxyConfig(new ClientProxyConfig(host,port,username,password))\n    .build();\nTargetClient targetClient = TargetClient.create(clientConfig);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}