{"version":3,"file":"component---src-pages-before-implement-privacy-content-security-policy-md-4ed4b492418d915af0e5.js","mappings":"wRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0CADR,6CAGA,uCAAwB,cAAGC,WAAW,IAClC,KAAQ,yDADY,2BAAxB,wGAE4I,cAAGA,WAAW,IACtJ,KAAQ,4DADgI,sBAF5I,MAKA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eAApB,UAAsF,uBAAYA,WAAW,MAAvB,mBAAtF,6EACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,2BAApB,mDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,4BAApB,oFAEF,eACE,GAAM,mCADR,sCAGA,0EACA,eACE,GAAM,iGADR,qGAGA,2qBACA,wHACA,gWACA,yLACA,wMAGH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/before-implement/privacy/content-security-policy.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"content-security-policy-csp-directives\"\n    }}>{`Content Security Policy (CSP) directives`}</h1>\n    <p>{`If you are using `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Content_Security_Policy\"\n      }}>{`Content Security Policy`}</a>{` (CSP) for your Adobe Target implementation, you should add the following CSP directives when using `}<a parentName=\"p\" {...{\n        \"href\": \"../../implement/client-side/atjs/target-atjs-versions.md\"\n      }}>{`at.js 2.1 or later`}</a>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`connect-src`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`*.tt.omtrdc.net`}</inlineCode>{` allowlisted. Necessary to allow the network request to the Target edge.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`style-src unsafe-inline`}</inlineCode>{`. Required for pre-hiding and flicker control.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`script-src unsafe-inline`}</inlineCode>{`.  Required to allow JavaScript execution that might be part of an HTML offer.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"frequently-asked-questions-faqs\"\n    }}>{`Frequently Asked Questions (FAQs)`}</h2>\n    <p>{`Consult the following FAQs about security policies:`}</p>\n    <h3 {...{\n      \"id\": \"do-cross-origin-resource-sharing-cors-and-flash-cross-domain-policies-present-security-issues\"\n    }}>{`Do Cross Origin Resource Sharing (CORS) and Flash Cross-domain policies present security issues?`}</h3>\n    <p>{`The recommended way of implementing the CORS policy is to permit access to only trusted origins that require it via an allowlist of trusted domains. The same can be said for the Flash Cross-domain policy. Some Adobe Target customers are concerned about the use of wildcard characters for domains in Target. The concern is that If a user is logged in to an application, and visits a domain allowed by the policy, any malicious content running on that domain can potentially retrieve sensitive content from the application and carry out actions within the security context of the logged in user. This is commonly referred to as Cross-Site Request Forgery (CSRF).`}</p>\n    <p>{`In an Adobe Target implementation, however, these policies should not represent a security issue.`}</p>\n    <p>{`“adobe.tt.omtrdc.net” is an Adobe-owned domain. Adobe Target is a testing and personalization tool and it is expected that Target can receive and process requests from anywhere without requiring any authentication. These requests contain key/value pairs that are used for A/B testing, recommendations, or content personalization.`}</p>\n    <p>{`Adobe does not store Personally Identifiable Information (PII) or other sensitive information on Adobe Target edge servers, to which “adobe.tt.omtrdc.net” points.`}</p>\n    <p>{`It is expected that Target can be accessed from any domain via JavaScript calls. The only way to allow this access is by leveraging “Access-Control-Allow-Origin” with a wildcard.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}