{"version":3,"file":"component---src-pages-before-implement-methods-to-get-data-into-target-data-providers-md-66dd34c79f00610963be.js","mappings":"uRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,kBADR,mBAGA,8HACA,uEACA,eACE,GAAM,UADR,WAGA,0BAAW,uBAAYC,WAAW,KAAvB,6CAAX,4CACA,2FAA4E,cAAGA,WAAW,IACtF,KAAQ,0FADgE,kBAA5E,MAGA,eACE,GAAM,qBADR,sBAGA,sNACA,eACE,GAAM,sBADR,uBAGA,4NACA,8GACA,kMACA,eACE,GAAM,WADR,YAGA,qDAAsC,uBAAYA,WAAW,KAAvB,6CAAtC,uHAAkP,uBAAYA,WAAW,KAAvB,6CAAlP,mCACA,4PACA,eACE,GAAM,iBADR,kBAGA,uDAAwC,cAAGA,WAAW,IAClD,KAAQ,0FAD4B,kBAAxC,MAGA,eACE,GAAM,iCADR,kCAGA,qCAAsB,cAAGA,WAAW,IAChC,KAAQ,0FADU,oBAGtB,eACE,GAAM,mBADR,qBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,qIADQ,0CAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,2IADQ,8CAMzB,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/before-implement/methods-to-get-data-into-target/data-providers.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"data-providers\"\n    }}>{`Data providers`}</h1>\n    <p>{`Data providers are a capability that allows you to easily pass data from third parties to Adobe Target.`}</p>\n    <p>{`Note: Data providers require at.js 1.3 or later.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`window.targetGlobalSettings.dataProviders`}</inlineCode>{` setting is an array of data providers.`}</p>\n    <p>{`For more information about the structure for each data provider, see `}<a parentName=\"p\" {...{\n        \"href\": \"../../implement/client-side/atjs/atjs-functions/targetglobalsettings.md#data-providers\"\n      }}>{`Data Providers`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example-use-cases\"\n    }}>{`Example use cases`}</h2>\n    <p>{`Collect data from a third party, such as a weather service, a DMP, or even your own web service. You can then use this data to build audiences, target content, and enrich the visitor profile.`}</p>\n    <h2 {...{\n      \"id\": \"benefits-of-method\"\n    }}>{`Benefits of method`}</h2>\n    <p>{`This setting lets customers gather data from third-party data providers, such as Demandbase, BlueKai, and custom services, and pass the data to Target as mbox parameters in the global mbox request.`}</p>\n    <p>{`It supports the collection of data from multiple providers via async and sync requests.`}</p>\n    <p>{`Using this approach makes it easy to manage flicker of default page content, while including independent timeouts for each provider to limit the impact on page performance`}</p>\n    <h2 {...{\n      \"id\": \"caveats\"\n    }}>{`Caveats`}</h2>\n    <p>{`If the data providers added to `}<inlineCode parentName=\"p\">{`window.targetGlobalSettings.dataProviders`}</inlineCode>{` are async, they are executed in parallel. The Visitor API request is executed in parallel with functions added to `}<inlineCode parentName=\"p\">{`window.targetGlobalSettings.dataProviders`}</inlineCode>{` to allow a minimum wait time.`}</p>\n    <p>{`at.js does not try to cache the data. If the data provider fetches data only once, the data provider should make sure that data is cached and, when the provider function is invoked, serve the cache data for the second invocation.`}</p>\n    <h2 {...{\n      \"id\": \"code-examples\"\n    }}>{`Code examples`}</h2>\n    <p>{`Several examples can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"../../implement/client-side/atjs/atjs-functions/targetglobalsettings.md#data-providers\"\n      }}>{`Data Providers`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"links-to-relevant-information\"\n    }}>{`Links to relevant information`}</h2>\n    <p>{`Documentation: `}<a parentName=\"p\" {...{\n        \"href\": \"../../implement/client-side/atjs/atjs-functions/targetglobalsettings.md#data-providers\"\n      }}>{`Data Providers`}</a></p>\n    <h2 {...{\n      \"id\": \"training-videos\"\n    }}>{`Training videos:`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/target-learn/tutorials/integrations/use-data-providers-to-integrate-third-party-data.html\"\n        }}>{`Using Data Providers in Adobe Target`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/target-learn/tutorials/integrations/implement-data-providers-to-integrate-third-party-data.html\"\n        }}>{`Implement Data Providers in Adobe Target`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}