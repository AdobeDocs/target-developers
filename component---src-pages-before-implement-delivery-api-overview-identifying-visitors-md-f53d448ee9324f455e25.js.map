{"version":3,"file":"component---src-pages-before-implement-delivery-api-overview-identifying-visitors-md-f53d448ee9324f455e25.js","mappings":"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","sources":["webpack://target-developers/./src/pages/before-implement/delivery-api-overview/identifying-visitors.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"identifying-visitors\"\n    }}>{`Identifying Visitors`}</h1>\n    <p>{`There are multiple ways in which a visitor can be identified within Target.`}</p>\n    <p>{`Target uses three identifiers:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`tntId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`tntId`}</inlineCode>{` is the primary identifier in Target for a user. You can supply this ID or Target will auto-generate it if the request doesn’t contain one.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`thirdPartyId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`thirdPartyId`}</inlineCode>{` is your company’s identifier for the user that you can send with every call. When a user logs in to a company's site, the company typically creates an ID that is tied to the visitor's account, loyalty card, membership number, or other applicable identifiers for that company.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`marketingCloudVisitorId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`marketingCloudVisitorId`}</inlineCode>{` is used to merge and share data between different Adobe solutions. The `}<inlineCode parentName=\"td\">{`marketingCloudVisitorId`}</inlineCode>{` is required for integrations with Adobe Analytics and Adobe Audience Manager.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`customerIds`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Along with the Experience Cloud Visitor ID, additional `}<a parentName=\"td\" {...{\n              \"href\": \"https://experienceleague.adobe.com/docs/id-service/using/reference/authenticated-state.html\"\n            }}>{`customer IDs`}</a>{` and an authenticated status for each visitor can be utilized.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"target-id\"\n    }}>{`Target ID`}</h2>\n    <p>{`The Target ID or `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` can be seen as a device ID. This `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` is generated automatically by Adobe Target if it isn't provided in the request. Thereafter, subsequent requests need to include this `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` in order for the right content to be delivered to a device used by the user.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`curl -X POST \\\\\n'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=10abf6304b2714215b1fd39a870f01afc#1555632114' \\\\\n-H 'Content-Type: application/json' \\\\\n-H 'cache-control: no-cache' \\\\\n-d '{\n  \"context\": {\n    \"channel\": \"web\",\n    \"browser\" : {\n      \"host\" : \"demo\"\n    },\n    \"address\" : {\n      \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n    },\n    \"screen\" : {\n      \"width\" : 1200,\n      \"height\": 1400\n    }\n  },\n    \"execute\": {\n    \"mboxes\" : [\n      {\n        \"name\" : \"SummerOffer\",\n        \"index\" : 1\n      }\n    ]\n  }\n}'\n`}</code></pre>\n    <p>{`The example call above demonstrates that a `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` does not need to be passed in. In this scenario, Adobe Target will generate a `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` and provide it in the response, as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-URI\"\n      }}>{`{\n  \"status\": 200,\n  \"requestId\": \"5b586f83-890c-46ae-93a2-610b1caa43ef\",\n  \"client\": \"demo\",\n  \"id\": {\n      \"tntId\": \"10abf6304b2714215b1fd39a870f01afc.28_20\"\n  },\n  \"edgeHost\": \"mboxedge28.tt.omtrdc.net\",\n  ...\n}\n`}</code></pre>\n    <p>{`The generated `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`10abf6304b2714215b1fd39a870f01afc.28_20`}</inlineCode>{`. Please note this `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` needs to be used when calling the Adobe Target Delivery API for the same user across sessions.`}</p>\n    <h2 {...{\n      \"id\": \"marketing-cloud-visitor-id\"\n    }}>{`Marketing Cloud Visitor ID`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` is a universal and persistent ID that identifies your visitors across all solutions in the Experience Cloud. When your organization implements the ID service, this ID lets you identify the same site visitor and their data in different Experience Cloud solutions like Adobe Target, Adobe Analytics or Adobe Audience Manager. Please note that the `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` is required when leveraging and integrating with Analytics and Audience Manager.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n  'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=10abf6304b2714215b1fd39a870f01afc#1555632114' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'cache-control: no-cache' \\\\\n  -d '{\n  \"id\": {\n    \"marketingCloudVisitorId\": \"10527837386392355901041112038610706884\"\n  },\n  \"context\": {\n    \"channel\": \"web\",\n    \"browser\" : {\n      \"host\" : \"demo\"\n    },\n    \"address\" : {\n      \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n    },\n    \"screen\" : {\n      \"width\" : 1200,\n      \"height\": 1400\n    }\n  },\n    \"execute\": {\n    \"mboxes\" : [\n      {\n        \"name\" : \"SummerOffer\",\n        \"index\" : 1\n      }\n    ]\n  }\n}'\n`}</code></pre>\n    <p>{`The above example call demonstrates how a `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` that was retrieved from the Experience Cloud ID Service is passed to Adobe Target. In this scenario, Adobe Target will generate a `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{` since it was not passed in to the original call which will be mapped to the provided `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` as seen in the response below.`}</p>\n    <h2 {...{\n      \"id\": \"third-party-id\"\n    }}>{`Third Party ID`}</h2>\n    <p>{`If your organization uses an ID to identify your visitor, you can use `}<inlineCode parentName=\"p\">{`thirdPartyID`}</inlineCode>{` to deliver content. However, you must provide the `}<inlineCode parentName=\"p\">{`thirdPartyID`}</inlineCode>{` for every Adobe Target Delivery API call you make.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n  'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=10abf6304b2714215b1fd39a870f01afc#1555632114' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'cache-control: no-cache' \\\\\n  -d '{\n  \"id\": {\n    \"thirdPartyId\": \"B234A029348\"\n  },\n  \"context\": {\n    \"channel\": \"web\",\n    \"browser\" : {\n      \"host\" : \"demo\"\n    },\n    \"address\" : {\n      \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n    },\n    \"screen\" : {\n      \"width\" : 1200,\n      \"height\": 1400\n    }\n  },\n    \"execute\": {\n    \"mboxes\" : [\n      {\n        \"name\" : \"SummerOffer\",\n        \"index\" : 1\n      }\n    ]\n  }\n}'\n`}</code></pre>\n    <p>{`The example call above shows a `}<inlineCode parentName=\"p\">{`thirdPartyId`}</inlineCode>{`, which is a persistent ID that your business utilizes to identify an end user regardless of whether they are interacting with your business from web, mobile, or IoT channels. In other words, the `}<inlineCode parentName=\"p\">{`thirdPartyId`}</inlineCode>{` will reference user profile data that can be utilized across channels. In this scenario, Adobe Target will generate a `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{`, since it was not passed in to the original call, which will be mapped to the provided `}<inlineCode parentName=\"p\">{`thirdPartyId`}</inlineCode>{` as seen in the response below.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"status\": 200,\n    \"requestId\": \"55de9886-bd14-4dee-819c-7d1633b79b90\",\n    \"client\": \"demo\",\n    \"id\": {\n        \"tntId\": \"10abf6304b2714215b1fd39a870f01afc.28_20\",\n        \"thirdPartyId\": \"B234A029348\"\n    },\n    \"edgeHost\": \"mboxedge28.tt.omtrdc.net\",\n    ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"customer-id\"\n    }}>{`Customer ID`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/id-service/using/reference/authenticated-state.html\"\n      }}>{`Customer IDs`}</a>{` can be added and associated with an Experience Cloud Visitor ID. Whenever sending `}<inlineCode parentName=\"p\">{`customerIds`}</inlineCode>{` the `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` must also be provided. Furthermore, an authentication status can be provided along with each `}<inlineCode parentName=\"p\">{`customerId`}</inlineCode>{` for each visitor. The following authentication status can be taken into consideration:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Authentication Status`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`User Status`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unknown`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Unknown or never authenticated. This state can be used for scenarios like a visitor that has landed on your site by clicking on a display advert.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`authenticated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The user is currently authenticated with an active session on your website or app.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`logged_out`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The user was authenticated but actively logged out. The user intended and meant to disconnect from the authenticated state. The user no longer wants to be treated as authenticated.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Please note that only when the customer id is in `}<inlineCode parentName=\"p\">{`authenticated`}</inlineCode>{` state will Target reference the user profile data that is stored and linked to the customer id. If the customer id is in `}<inlineCode parentName=\"p\">{`unknown`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`logged_out`}</inlineCode>{` state, the customer id will be ignored, and any user profile data that may be associated with it will not be leveraged for audience targeting.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n  'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=d359234570e044f14e1faeeba02d6ab23439914e' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'cache-control: no-cache' \\\\\n  -d '{\n      \"context\": {\n        \"channel\": \"web\",\n        \"browser\" : {\n          \"host\" : \"demo\"\n        },\n        \"address\" : {\n          \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n        },\n        \"screen\" : {\n          \"width\" : 1200,\n          \"height\": 1400\n        }\n      },\n      \"id\": {\n        \"marketingCloudVisitorId\" : \"2304820394812039\",\n        \"customerIds\": [{\n          \"id\": \"134325423\",\n          \"integrationCode\" : \"crm_data\",\n          \"authenticatedState\" : \"authenticated\"\n        }]\n      },\n      \"property\" : {\n        \"token\": \"08b62abd-c3e7-dfb2-da93-96b3aa724d81\"\n      },\n        \"execute\": {\n        \"mboxes\" : [\n          {\n            \"name\" : \"homepage\",\n            \"index\" : 1\n          }\n        ]\n      }\n    }'\n`}</code></pre>\n    <p>{`The example call above demonstrates how to send a `}<inlineCode parentName=\"p\">{`customerId`}</inlineCode>{` with an `}<inlineCode parentName=\"p\">{`authenticatedState`}</inlineCode>{`. When sending a `}<inlineCode parentName=\"p\">{`customerId`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`integrationCode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`authenticatedState`}</inlineCode>{` as well as the `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` are required. The `}<inlineCode parentName=\"p\">{`integrationCode`}</inlineCode>{` is the alias of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/target/using/audiences/visitor-profiles/working-with-customer-attributes.html\"\n      }}>{`customer attributes file`}</a>{` you provided through CRS.`}</p>\n    <h2 {...{\n      \"id\": \"merged-profile\"\n    }}>{`Merged Profile`}</h2>\n    <p>{`You can combine `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`t`}</inlineCode>{`hirdPartyID`}<inlineCode parentName=\"p\">{`, and `}</inlineCode>{`marketingCloudVisitorId\\` in the same request. In this scenario, Adobe Target will maintain the mapping of all these IDs and pin it to a visitor. Learn how profiles are `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/target/using/audiences/visitor-profiles/3rd-party-id.html\"\n      }}>{`merged and synced in real time`}</a>{` using the different identifiers.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST \\\\\n  'https://demo.tt.omtrdc.net/rest/v1/delivery?client=demo&sessionId=d359234570e044f14e1faeeba02d6ab23439914e' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'cache-control: no-cache' \\\\\n  -d '{\n      \"context\": {\n        \"channel\": \"web\",\n        \"browser\" : {\n          \"host\" : \"demo\"\n        },\n        \"address\" : {\n          \"url\" : \"http://demo.dev.tt-demo.com/demo/store/index.html\"\n        },\n        \"screen\" : {\n          \"width\" : 1200,\n          \"height\": 1400\n        }\n      },\n      \"id\": {\n        \"marketingCloudVisitorId\" : \"2304820394812039\",\n        \"tntId\": \"d359234570e044f14e1faeeba02d6ab23439914e.28_78\",\n        \"thirdPartyId\":\"23423432\"\n      },\n      \"property\" : {\n        \"token\": \"08b62abd-c3e7-dfb2-da93-96b3aa724d81\"\n      },\n      \"experienceCloud\": {\n        \"analytics\": {\n          \"supplementalDataId\" : \"23423498732598234\",\n          \"trackingServer\": \"ags041.sc.omtrdc.net\",\n          \"logging\": \"server_side\"\n        }\n      },\n        \"execute\": {\n        \"mboxes\" : [\n          {\n            \"name\" : \"homepage\",\n            \"index\" : 1\n          }\n        ]\n      }\n    }'\n`}</code></pre>\n    <p>{`The example call above demonstrates how you can combine `}<inlineCode parentName=\"p\">{`tntId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`thirdPartyID`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`marketingCloudVisitorId`}</inlineCode>{` in the same request. All three IDs are also returned in the response.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}