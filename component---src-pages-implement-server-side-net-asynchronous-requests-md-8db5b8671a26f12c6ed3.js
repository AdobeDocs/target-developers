"use strict";(self.webpackChunktarget_developers=self.webpackChunktarget_developers||[]).push([[4747],{43199:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return u},default:function(){return c}});var s,i=n(87462),a=n(63366),o=(n(15007),n(64983)),r=n(91515),d=["components"],u={},l=(s="CodeBlock",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),p={_frontmatter:u},m=r.Z;function c(e){var t=e.components,n=(0,a.Z)(e,d);return(0,o.mdx)(m,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"asynchronous-requests"},"Asynchronous Requests"),(0,o.mdx)("h2",{id:"description"},"Description"),(0,o.mdx)("p",null,"One benefit of server-side integration is that one can leverage the huge bandwidth and computing resources available on the server-side by using parallelism. Target .NET SDK supports asynchronous requests, making it easy to integrate Target into an app's existing async workflow."),(0,o.mdx)("h2",{id:"supported-methods"},"Supported Methods"),(0,o.mdx)(l,{slots:"heading, code",repeat:"1",languages:"dotnet",mdxType:"CodeBlock"}),(0,o.mdx)("h3",{id:"net"},".","NET"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-dotnet"},"Task<TargetDeliveryResponse> GetOffersAsync(TargetDeliveryRequest request);\nTask<TargetDeliveryResponse> SendNotificationsAsync(TargetDeliveryRequest request);\nTask<TargetAttributes> GetAttributesAsync(TargetDeliveryRequest request, params string[] mboxes);\n")),(0,o.mdx)("h2",{id:"example"},"Example"),(0,o.mdx)("p",null,"A sample async SDK API usage could appear as follows:"),(0,o.mdx)(l,{slots:"heading, code",repeat:"1",languages:"dotnet",mdxType:"CodeBlock"}),(0,o.mdx)("h3",{id:"net-1"},".","NET"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-dotnet"},'var deliveryRequest = new TargetDeliveryRequest.Builder()\n    .SetExecute(new ExecuteRequest(mboxes: new List<MboxRequest> { new MboxRequest(index: 1, name: "a1-serverside-ab") }))\n    .Build();\n\nvar response = await this.targetClient.GetOffersAsync(deliveryRequest);\n\nvar notificationRequest = new TargetDeliveryRequest.Builder()\n    .SetSessionId(response.Request.SessionId)\n    .SetTntId(response.Response?.Id?.TntId)\n    .SetNotifications(new List<Notification>\n        {\n            new (id: "1", type: MetricType.Display, timestamp: DateTimeOffset.UtcNow.ToUnixTimeMilliseconds(),\n                mbox: new NotificationMbox("product1", "J+W1Fq18hxliDDJonTPfV0S+mzxapAO3d14M43EsM9f12A6QaqL+E3XKkRFlmq9U"),\n                tokens: new List<string> { "t0FRvoWosOqHmYL5G18QCZNWHtnQtQrJfmRrQugEa2qCnQ9Y9OaLL2gsdrWQTvE54PwSz67rmXWmSnkXpSSS2Q==" })\n        })\n    .Build();\n\nvar notificationResponse = await this.targetClient.SendNotificationsAsync(notificationRequest);\n')),(0,o.mdx)("p",null,"This example assumes you have ",(0,o.mdx)("a",{parentName:"p",href:"../initialize-sdk.md"},"initialized the SDK"),"."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-implement-server-side-net-asynchronous-requests-md-8db5b8671a26f12c6ed3.js.map