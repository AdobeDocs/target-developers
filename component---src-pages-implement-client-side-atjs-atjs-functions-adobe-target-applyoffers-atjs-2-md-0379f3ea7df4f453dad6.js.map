{"version":3,"file":"component---src-pages-implement-client-side-atjs-atjs-functions-adobe-target-applyoffers-atjs-2-md-0379f3ea7df4f453dad6.js","mappings":"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","sources":["webpack://target-developers/./src/pages/implement/client-side/atjs/atjs-functions/adobe-target-applyoffers-atjs-2.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobetargetapplyoffersoptions---atjs-2x\"\n    }}>{`adobe.target.applyOffers(options) - at.js 2.x`}</h1>\n    <p>{`This function lets you apply more than one offer that was retrieved by `}<inlineCode parentName=\"p\">{`adobe.target.getOffers()`}</inlineCode>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This function was introduced with at.js 2.x. This function is not available for at.js version 1.`}<em parentName=\"p\">{`x`}</em>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required?`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`selector`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTML element or CSS selector used to identify the HTML element where Target should place the offer content. If a selector is not provided, Target assumes that the HTML element to use is HTML HEAD.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Response`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Response object from `}<inlineCode parentName=\"td\">{`getOffers()`}</inlineCode>{`.`}<br />{`See Requests table below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Consult the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../delivery-api/index.md\"\n      }}>{`Delivery API documentation`}</a>{` for information about the acceptable types for all fields listed below.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch > views > options > content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Note that the content of the \"option\" is not well-defined and depends directly on the option type/template structure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch > views > options > type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option type. Reflects type of \"content\" field. Supported type is actions.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch > views > state`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An opaque view state token that should be forwarded with display notification for the view`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > options > responseTokens`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Contains the map of `}<inlineCode parentName=\"td\">{`responseTokens`}</inlineCode>{` that have been collected when the current option was being processed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > analytics > payload`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Analytics payload for client-side integration that should be sent to Analytics after the view has been applied.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > trace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object containing all trace data for the prefetch call per view.`}<br />{`The trace object will also include a version for the trace.`}<br />{`The trace object will also include details of the current view.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > options > eventToken`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event logging is done per option. For every applied option the respective event token should to be added to the list of notification tokens. Note that a View is composed of multiple options. If all options have been applied and seen, all `}<inlineCode parentName=\"td\">{`eventTokens`}</inlineCode>{` need to be included in the notification.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The human-readable view name.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > metrics`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reporting metrics that should be watched and then notify Target about. Currently, just click metric is supported. In case a click on the element happens, the appropriate `}<inlineCode parentName=\"td\">{`eventTokens`}</inlineCode>{` should be collected and a notification should be sent.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > key`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The key or fingerprint that identifies the view.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > prefetch  > views > id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ID of the view.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Notification ID.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events > type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The type of the notification, click, or display.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events > trace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The trace for the notification event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events > token`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The token that was sent with the notification event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events > timestamp`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The timestamp that was sent with the notification event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events > errorCode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If the notification failed, the code indicates the reason for the failure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications > events`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The events that were logged or failed to be logged for the current notification.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > notifications`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Indicates the logged or failed notifications.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > trace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object containing all trace data for the individual mbox request.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > responseTokens`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Contains map of `}<inlineCode parentName=\"td\">{`responseTokens`}</inlineCode>{` for specific mbox request execution.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > option > content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Note that the content of the \"option\" is not well-defined and depends directly on the option type/template structure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > option > type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option type. Reflects type of \"content\" field. Supported types are: html, redirect, JSON, and dynamic.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Response option.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > metrics > eventToken`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Token of click event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > metrics > type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"click\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > metrics`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Contains list of `}<inlineCode parentName=\"td\">{`clickThrough`}</inlineCode>{` metrics.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > mbox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the mbox.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox >index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Indicates that the response is for mbox with this index from the request.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes > mbox > analytics > payload`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Analytics payload for client-side integration that should be sent to Analytics after the mbox has been applied. (See A4T-enabled Campaigns section.)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > mboxes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`List of executed mboxes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > options > content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Note that the content of the \"option\" is not well-defined and depends directly on the option type/template structure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > options > type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option type. Reflects type of \"content\" field. Supported types are: html, redirect, JSON, dynamic, and actions.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Options that aren't grouped by views (target-global-mbox + options from activities with views not grouped by views).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > metrics`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Click metrics that were not set to belong to a specific view.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > trace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object containing all trace data for the pageLoad request.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`response > execute > pageLoad > analytics > payload`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Analytics payload for client-side integration that should be sent to Analytics after the page load content has been applied. (See A4T-enabled Campaigns section.)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example-applyoffers-call\"\n    }}>{`Example applyOffers() call`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`adobe.target.applyOffers({response:{\n  \"execute\": {\n    \"pageLoad\": {\n      \"options\": [{\n        \"type\": \"html\",\n        \"content\": \"page-load\"\n      },\n      {\n        \"type\": \"actions\",\n        \"content\": [{\n          \"type\": \"setHtml\",\n          \"content\": \"<h1>Container 1</h1>\",\n          \"selector\": \"#container1\",\n          \"cssSelector\": \"#container1\"\n        },\n        {\n          \"type\": \"setHtml\",\n          \"content\": \"<h3>Container 3</h3>\",\n          \"selector\": \"#container3\",\n          \"cssSelector\": \"#container3\"\n        }]\n      }],\n \n \n      \"metrics\": [{\n        \"type\": \"click\",\n        \"selector\": \"#container1\",\n        \"eventToken\": \"page-load-click-metric\" \n      }]\n    }\n  }\n}});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-calls-of-promise-chaining-with-getoffers-and-applyoffers-because-these-functions-are-promise-based\"\n    }}>{`Example calls of Promise chaining with `}<inlineCode parentName=\"h2\">{`getOffers()`}</inlineCode>{` and `}<inlineCode parentName=\"h2\">{`applyOffers()`}</inlineCode>{`, because these functions are Promise based`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`adobe.target.getOffers({...})\n.then(response => adobe.target.applyOffers({ response: response }))\n.then(() => console.log(\"Success\"))\n.catch(error => console.log(\"Error\", error));\n`}</code></pre>\n    <p>{`For more examples on how to use getOffers(), please refer to the getOffers `}<a parentName=\"p\" {...{\n        \"href\": \"adobe-target-getoffers-atjs-2.md\"\n      }}>{`documentation`}</a></p>\n    <h3 {...{\n      \"id\": \"page-load-request-example\"\n    }}>{`Page Load Request Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`adobe.target.getOffers({\n    request: {\n        execute: {\n            pageLoad: {}\n        }\n    }\n}).\nthen(response => adobe.target.applyOffers({ response: response }))\n.then(() => console.log(\"Success\"))\n.catch(error => console.log(\"Error\", error));\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}