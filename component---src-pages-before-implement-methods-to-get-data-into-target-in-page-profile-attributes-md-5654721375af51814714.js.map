{"version":3,"file":"component---src-pages-before-implement-methods-to-get-data-into-target-in-page-profile-attributes-md-5654721375af51814714.js","mappings":"wRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,8BADR,+BAGA,6NACA,iJACA,eACE,GAAM,UADR,WAGA,4KACA,gIACA,eACE,GAAM,YADR,aAGA,oBACE,eAAIC,WAAW,OAAK,uBAAYA,WAAW,MAAvB,oCACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,2BAEtB,eACE,GAAM,qBADR,sBAGA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,qBAApB,kKACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,cAApB,2DACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,yBAApB,6FAEF,eACE,GAAM,sBADR,uBAGA,iIACA,eACE,GAAM,WADR,YAGA,4FACA,6OACA,eACE,GAAM,iBADR,kBAGA,kGACA,mBAAG,uBAAYA,WAAW,KAAvB,uHACH,gGACA,mBAAG,uBAAYA,WAAW,KAAvB,mHACH,qDACA,mBAAG,uBAAYA,WAAW,KAAvB,wKACH,eACE,GAAM,iCADR,kCAGA,mBAAG,cAAGA,WAAW,IACb,KAAQ,2GADT,wBAGH,mBAAG,cAAGA,WAAW,IACb,KAAQ,6HADT,oBAKN,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/before-implement/methods-to-get-data-into-target/in-page-profile-attributes.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"in-page-profile-attributes\"\n    }}>{`In-page profile attributes`}</h1>\n    <p>{`In-page profile attributes in Adobe Target (also called \"in-mbox profile attributes\") are name/value pairs passed directly through page code that are stored in the visitor's profile for future use.`}</p>\n    <p>{`In-page profile attributes allow user-specific data to be stored in Target's profile for later targeting and segmentation.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`In-page profile attributes are passed into Target via a server call as a string name/value pair with the prefix \"profile.\" before the Attribute name.`}</p>\n    <p>{`Attribute names and values are customizable (although there are some \"reserved names\" for specific uses).`}</p>\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`profile.membershipLevel=silver`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`profile.visitCount=3`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example-use-cases\"\n    }}>{`Example use cases`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Login information`}</strong>{`: Share non-PII (Personally Identifiable Information) data to Target based on the user's login. This data could be membership status, order history, or more.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Store info`}</strong>{`: Track which store is this user's preferred location.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Previous interactions`}</strong>{`: Track what the user has done on the site previously to inform future personalization.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"benefits-of-method\"\n    }}>{`Benefits of method`}</h2>\n    <p>{`Data gets sent to Target in real time, and can be used on the same server call on which the data comes in.`}</p>\n    <h2 {...{\n      \"id\": \"caveats\"\n    }}>{`Caveats`}</h2>\n    <p>{`Requires page code updates (directly or via a tag management system).`}</p>\n    <p>{`Attributes and values are visible in server calls, so a visitor can see the values. If sharing information such as credit ranges or other potentially private information, this method might not be the best approach.`}</p>\n    <h2 {...{\n      \"id\": \"code-examples\"\n    }}>{`Code examples`}</h2>\n    <p>{`targetPageParamsAll (appends the attributes to all mbox calls on the page):`}</p>\n    <p><inlineCode parentName=\"p\">{`function targetPageParamsAll() { return \"profile.param1=value1&profile.param2=value2&profile.p3=hello%20world\"; }`}</inlineCode></p>\n    <p>{`targetPageParams (appends the attributes to the global mbox on the page):`}</p>\n    <p><inlineCode parentName=\"p\">{`function targetPageParams() { return profile.param1=value1&profile.param2=value2&profile.p3=hello%20world\"; }`}</inlineCode></p>\n    <p>{`Attributes in mboxCreate code:`}</p>\n    <p><inlineCode parentName=\"p\">{`<div class=\"mboxDefault\"> default content to replace by offer </div> <script> mboxCreate('mboxName','profile.param1=value1','profile.param2=value2'); </script>`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"links-to-relevant-information\"\n    }}>{`Links to relevant information`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/target/using/audiences/visitor-profiles/profile-parameters.html\"\n      }}>{`Profile Attributes`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/visitor-profile.html\"\n      }}>{`Visitor Profile`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}