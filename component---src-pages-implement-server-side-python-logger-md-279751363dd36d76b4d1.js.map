{"version":3,"file":"component---src-pages-implement-server-side-python-logger-md-279751363dd36d76b4d1.js","mappings":"gNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,UADR,WAGA,eACE,GAAM,eADR,gBAGA,2BAAY,cAAGC,WAAW,IACtB,KAAQ,wBADA,wBAAZ,UAE2C,uBAAYA,WAAW,KAAvB,qBAF3C,8FAEsM,uBAAYA,WAAW,KAAvB,gBAFtM,sGAEoW,uBAAYA,WAAW,KAAvB,UAFpW,uDAGA,0BAAW,uBAAYA,WAAW,KAAvB,UAAX,kCAA+F,uBAAYA,WAAW,KAAvB,WAA/F,YAA8J,uBAAYA,WAAW,KAAvB,WAA9J,mGACA,eACE,GAAM,WADR,YAGA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,SAASJ,QAAQ,eACvE,eACE,GAAM,UADR,WAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,mBADZ,0PAYL,yFAGH,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/server-side/python/logger.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"logger\"\n    }}>{`Logger`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`When `}<a parentName=\"p\" {...{\n        \"href\": \"../initialize-sdk.md\"\n      }}>{`initializing the SDK`}</a>{`, the `}<inlineCode parentName=\"p\">{`options[\"logger\"]`}</inlineCode>{` object is an optional object. By default, an INFO level logger will be created under the `}<inlineCode parentName=\"p\">{`adobe.target`}</inlineCode>{` namespace. However, in order to customize log level or debug effectively when an issue occurs, a `}<inlineCode parentName=\"p\">{`logger`}</inlineCode>{` object can be provided when initializing the SDK.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`logger`}</inlineCode>{` object is expected to have a `}<inlineCode parentName=\"p\">{`debug()`}</inlineCode>{` and an `}<inlineCode parentName=\"p\">{`error()`}</inlineCode>{` method. When an appropriate logger is provided, Target requests and responses will be logged.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"python\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`logger = logging.getLogger(\"org.logger\")\nlogger.setLevel(logging.DEBUG)\n\nclient_options = {\n  \"client\": \"acmeclient\",\n  \"organization_id\": \"1234567890@AdobeOrg\",\n  \"logger\": logger\n}\ntarget_client = TargetClient.create(client_options)\n`}</code></pre>\n    <p>{`You should see requests and responses being printed in the console.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}