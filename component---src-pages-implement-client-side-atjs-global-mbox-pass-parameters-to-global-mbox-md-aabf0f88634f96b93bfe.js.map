{"version":3,"file":"component---src-pages-implement-client-side-atjs-global-mbox-pass-parameters-to-global-mbox-md-aabf0f88634f96b93bfe.js","mappings":"gNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,oCADR,qCAGA,qCAAsB,uBAAYC,WAAW,KAAvB,oBAAtB,wLACA,yJACA,2MACA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,oHAAqG,cAAGC,WAAW,IAC/G,KAAQ,iGADyF,yBAArG,eAGA,oDAAqC,uBAAYA,WAAW,KAAvB,sBAArC,eAAkH,uBAAYA,WAAW,KAAvB,sBAAlH,4CACA,oBACE,eAAIA,WAAW,MAAf,aACA,eAAIA,WAAW,MAAf,kBACA,eAAIA,WAAW,MAAf,iCAEF,6KAA8J,cAAGA,WAAW,IACxK,KAAQ,yFADkJ,mCAA9J,MAGA,0HAA2G,uBAAYA,WAAW,KAAvB,oBAA3G,MACA,eACE,GAAM,gBADR,iBAGA,qBAAK,iBAAMA,WAAW,OAAjB,oCAEL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,UAA6B,uBAAYA,WAAW,KAAvB,oBAA7B,OAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,iFACA,cAAGA,WAAW,MAAd,aACA,cAAGA,WAAW,MAAd,sCAAyD,uBAAYA,WAAW,KAAvB,eAAzD,8BAGJ,gEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,+UAgBL,8EACA,oBACE,eAAIA,WAAW,MAAf,WACA,eAAIA,WAAW,MAAf,WACA,eAAIA,WAAW,MAAf,oBAEF,eACE,GAAM,SADR,UAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+GAOL,4IACA,8EACA,oBACE,eAAIA,WAAW,MAAf,SACA,eAAIA,WAAW,MAAf,SACA,eAAIA,WAAW,MAAf,mBAEF,eACE,GAAM,QADR,SAGA,4JACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,6TAgBL,qJACA,8EACA,oBACE,eAAIA,WAAW,MAAf,SACA,eAAIA,WAAW,MAAf,SACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,wBAApB,WACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,wBAApB,mBAIL,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/client-side/atjs/global-mbox/pass-parameters-to-global-mbox.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"pass-parameters-to-a-global-mbox\"\n    }}>{`Pass Parameters to a global mbox`}</h1>\n    <p>{`The JavaScript `}<inlineCode parentName=\"p\">{`targetPageParams`}</inlineCode>{` function is used to pass parameters to the global mbox in Adobe Target. This is needed in any scenario where additional targeting/context information is to be passed into Target.`}</p>\n    <p>{` For example, in a Recommendations activity, use the parameters to represent the current product or category that is being viewed.`}</p>\n    <p>{`The code to call the JavaScript function must come before the global mbox on the page, whether the global mbox is fired as a part of at.js or is manually included in the page code.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you want to add parameters to all mboxes on the page, not just to the global mbox, use the `}<a parentName=\"p\" {...{\n        \"href\": \"/target-developers/src/pages/implement/client-side/atjs/atjs-functions/targetpageparamsall.md\"\n      }}>{`targetPageParamsAll()`}</a>{` function.`}</p>\n    <p>{`You can pass in parameters to `}<inlineCode parentName=\"p\">{`target-global-mbox`}</inlineCode>{` using the `}<inlineCode parentName=\"p\">{`targetPageParams()`}</inlineCode>{` function in any of the following ways:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An array`}</li>\n      <li parentName=\"ul\">{`A JSON object`}</li>\n      <li parentName=\"ul\">{`An ampersand-delimited list`}</li>\n    </ul>\n    <p>{`Use these three methods to verify that the parameters are being passed correctly. You might also be able to verify the passing of parameters using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/debugger/using/experience-cloud-debugger.html\"\n      }}>{`Adobe Experience Cloud Debugger`}</a>{`.`}</p>\n    <p>{`You must define the JavaScript function before adding the global mbox to the page. The name must be `}<inlineCode parentName=\"p\">{`targetPageParams`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"query-string\"\n    }}>{`Query String`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`p1=v1&p2=v2&p3=hello%20world\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Name: `}<inlineCode parentName=\"p\">{`targetPageParams`}</inlineCode>{` `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Return value: a \"&\" delimited parameters, with URL encoded parameter values.`}</p>\n        <p parentName=\"li\">{`Example:`}</p>\n        <p parentName=\"li\">{`In this example, p3 has the value `}<inlineCode parentName=\"p\">{`hello world`}</inlineCode>{`, which is URL encoded.`}</p>\n      </li>\n    </ul>\n    <p>{`Consider the following example page code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<html> \n  <head> \n    <title>Title here..</title> \n    <script type=\"text/javascript\"> \n        function targetPageParams() { \n          return \"p1=v1&p2=v2&p3=hello%20world\";\n        } \n    </script> \n    <script src=\"mbox.js\" type=\"text/javascript\"></script> \n  </head> \n  <body>Body here... \n  </body> \n</html>\n`}</code></pre>\n    <p>{`This example sends the following data to the mbox edge:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`p1=v1 `}</li>\n      <li parentName=\"ul\">{`p2=v2 `}</li>\n      <li parentName=\"ul\">{`p3=hello world`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"array\"\n    }}>{`Array`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<!--window.-->targetPageParams = function() { \n  return [\"a=1\", \"b=2\", \"c=hello world\"]; \n}; \n\n`}</code></pre>\n    <p>{`Values do not need to be URL encoded. For example, if a value contains a space, there is no need to encode the space.`}</p>\n    <p>{`This example sends the following data to the mbox edge:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a=1 `}</li>\n      <li parentName=\"ul\">{`b=2 `}</li>\n      <li parentName=\"ul\">{`c=hello world`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"json\"\n    }}>{`JSON`}</h2>\n    <p>{`JSON is a powerful way to pass parameters. Target uses the JSON object keys to flatten complicated structures into simple parameters.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`<!--window.-->targetPageParams = function() { \n  return { \n    \"a\": 1, \n    \"b\": 2, \n    \"profile\": { \n                  \"memberStatus\": Gold, \n                  \"country\": { \n                                \"city\": \"San Francisco\" \n                            } \n              } \n  }; \n}; \n\n`}</code></pre>\n    <p>{`Values do not need to be URL encoded. For example, \"San Francisco\" does not require the space to be encoded. A space suffices.`}</p>\n    <p>{`This example sends the following data to the mbox edge:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a=1 `}</li>\n      <li parentName=\"ul\">{`b=2 `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`profile.memberStatus`}</inlineCode>{`=Gold `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`profile.country.city`}</inlineCode>{`=San Francisco`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}