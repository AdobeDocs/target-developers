{"version":3,"file":"component---src-pages-implement-server-side-java-sdk-events-md-ee06961a62f9124b33a3.js","mappings":"gNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,cADR,eAGA,eACE,GAAM,eADR,gBAGA,2BAAY,cAAGC,WAAW,IACtB,KAAQ,wBADA,wBAAZ,kBAEmD,uBAAYA,WAAW,KAAvB,8BAFnD,mCAE4J,uBAAYA,WAAW,KAAvB,gBAF5J,wGAE4T,uBAAYA,WAAW,KAAvB,4BAF5T,6GAGA,eACE,GAAM,UADR,WAGA,0BAAW,uBAAYA,WAAW,KAAvB,8BAAX,mFACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,6BAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,mFAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,8BAGA,eAAIA,WAAW,KACb,MAAS,MADX,qCAGA,eAAIA,WAAW,KACb,MAAS,MADX,sEAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,2BAGA,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,yFAMN,eACE,GAAM,WADR,YAGA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,OAAOJ,QAAQ,eACrE,eACE,GAAM,gBADR,eAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,uBADZ,i6CAyCR,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/server-side/java/sdk-events.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sdk-events\"\n    }}>{`SDK Events`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`When `}<a parentName=\"p\" {...{\n        \"href\": \"../initialize-sdk.md\"\n      }}>{`initializing the SDK`}</a>{`, an optional `}<inlineCode parentName=\"p\">{`OnDeviceDecisioningHandler`}</inlineCode>{` object can be provided on the `}<inlineCode parentName=\"p\">{`ClientConfig`}</inlineCode>{` object. It can be used to subscribe to various events that occur within the SDK. For instance, the `}<inlineCode parentName=\"p\">{`onDeviceDecisioningReady`}</inlineCode>{` event may be used with a callback function that will be invoked when the SDK is ready for method calls.`}</p>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`OnDeviceDecisioningHandler`}</inlineCode>{` object contains the following callbacks, which are called for certain events:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Arguments`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onDeviceDecisioningReady`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Called only once the first time the client is ready for on-device decisioning`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`artifactDownloadSucceeded`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`byte[] contents of artifact file`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Called every time a on-device decisioning artifact is downloaded`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`artifactDownloadFailed`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Exception`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Called every time there is a failure to download a on-device decisioning artifact`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Java\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"sdk-events-1\"\n    }}>{`SDK Events`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`ClientConfig clientConfig = ClientConfig.builder()\n        .client(\"acmeclient\")\n        .organizationId(\"1234567890@AdobeOrg\")\n        .defaultDecisioningMethod(DecisioningMethod.ON_DEVICE)\n        .onDeviceDecisioningHandler(new OnDeviceDecisioningHandler() {\n            @Override\n            public void onDeviceDecisioningReady() {\n                // make getOffers requests\n                makeTargetRequests();\n            }\n\n            @Override\n            public void artifactDownloadSucceeded(byte[] artifactData) {\n                System.out.println(\"The artifact was successfully downloaded.\");\n            }\n\n            @Override\n            public void artifactDownloadFailed(TargetClientException e) {\n                System.out.println(\"The artifact failed to download.\");\n            }\n        }).build();\n\nTargetClient targetJavaClient = TargetClient.create(clientConfig);\n\n\nvoid makeTargetRequests() {\n    List<MboxRequest> mboxRequests = new ArrayList<>();\n    mboxRequests.add((MboxRequest) new MboxRequest().name(\"a1-serverside-ab\").index(1));\n\n    TargetDeliveryRequest targetDeliveryRequest = TargetDeliveryRequest.builder()\n            .context(new Context().channel(ChannelType.WEB))\n            .execute(new ExecuteRequest().setMboxes(mboxRequests))\n            .build();\n\n    TargetDeliveryResponse targetResponse = targetJavaClient.getOffers(targetDeliveryRequest);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}