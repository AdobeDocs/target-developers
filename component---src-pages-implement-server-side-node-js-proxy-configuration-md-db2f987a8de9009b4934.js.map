{"version":3,"file":"component---src-pages-implement-server-side-node-js-proxy-configuration-md-db2f987a8de9009b4934.js","mappings":"wRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBADR,wBAGA,2IACA,+EAAgE,uBAAYC,WAAW,KAAvB,YAAhE,gBAAoI,uBAAYA,WAAW,KAAvB,gBAApI,oCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,uVAiBL,kFAAmE,uBAAYA,WAAW,KAAvB,gBAAnE,oBAA+I,uBAAYA,WAAW,KAAvB,SAA/I,iCACe,cAAGA,WAAW,IACzB,KAAQ,+FADG,yBADf,uFAOH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/server-side/node-js/proxy-configuration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"proxy-configuration\"\n    }}>{`Proxy Configuration`}</h1>\n    <p>{`To configure a proxy for the Node SDK's HTTP requests, override the fetch API used by the SDK during initialization.`}</p>\n    <p>{`The following is a basic example showing how to override `}<inlineCode parentName=\"p\">{`fetchApi`}</inlineCode>{` during the `}<inlineCode parentName=\"p\">{`TargetClient`}</inlineCode>{` initialization to add a proxy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { ProxyAgent } = require(\"undici\");\n\nconst proxyAgent = new ProxyAgent(\"your proxy address here\");\n\nconst fetchImpl = (url, options) => {\n  const fetchOptions = options;\n  fetchOptions.dispatcher = proxyAgent;\n  return fetch(url, fetchOptions);\n};\n\nclient = TargetClient.create({\n    ...,\n    fetchApi: fetchImpl\n});\n`}</code></pre>\n    <p>{`Note that this only works for Node versions 18.2+, in which `}<inlineCode parentName=\"p\">{`undici.fetch`}</inlineCode>{` is the default `}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{` for node.\nPlease visit the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ericfichtel/target-nodejs-sdk-samples/tree/TNT-46700/proxy-configuration\"\n      }}>{`Node SDK samples repo`}</a>{`\nfor proxy configuration examples for older versions of node and more information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}