{"version":3,"file":"component---src-pages-implement-server-side-sdk-guides-integration-with-experience-cloud-a-4-t-reporting-md-f8b804c4d9330c20e0b7.js","mappings":"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","sources":["webpack://target-developers/./src/pages/implement/server-side/sdk-guides/integration-with-experience-cloud/a4t-reporting.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"analytics-for-target-a4t-reporting\"\n    }}>{`Analytics for Target (A4T) reporting`}</h1>\n    <p>{`Adobe Target supports A4T reporting for both on-device decisioning and server-side Target activities. There are two configuration options for enabling A4T reporting:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Adobe Target automatically forwards the analytics payload to Adobe Analytics, or`}</li>\n      <li parentName=\"ul\">{`The user requests the analytics payload from Adobe Target. (Adobe Target returns the Adobe Analytics payload back to the caller.)`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{`: On-device decisioning only supports A4T reporting of which Adobe Target automatically forwards the analytics payload to Adobe Analytics. Retrieving the analytics payload from Adobe Target is not supported.`}</p>\n    <h2 {...{\n      \"id\": \"pre-requisites\"\n    }}>{`Pre-requisites`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Configure the activity in the Adobe Target UI with Adobe Analytics as the reporting source, and ensure the accounts are enabled for A4T.`}</li>\n      <li parentName=\"ol\">{`The API user generates the Adobe Marketing Cloud Visitor ID and ensures this ID is available when the Target request is executed.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"adobe-target-automatically-forwards-the-analytics-payload\"\n    }}>{`Adobe Target automatically forwards the Analytics payload`}</h2>\n    <p>{`Adobe Target can automatically forward the analytics payload to Adobe Analytics if the following identifiers are provided:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`supplementalDataId`}</inlineCode>{`: The ID that is utilized to stitch between Adobe Analytics and Adobe Target. In order for Adobe Target and Adobe Analytics to correctly stitch data together, the same `}<inlineCode parentName=\"li\">{`supplementalDataId`}</inlineCode>{` needs to be passed to both Adobe Target and Adobe Analytics.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`trackingServer`}</inlineCode>{`: The Adobe Analytics Server.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"nodejs\"\n    }}>{`Node.js`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`const TargetClient = require(\"@adobe/target-nodejs-sdk\");\n\nconst CONFIG = {\n  client: \"acmeclient\",\n  organizationId: \"1234567890@AdobeOrg\"\n};\n\nconst targetClient = TargetClient.create(CONFIG);\n\ntargetClient.getOffers({\n  request: {     \n    id: {\n      marketingCloudVisitorId : \"2304820394812039\",\n      tntId: \"d359234570e044f14e1faeeba02d6ab23439914e.35_0\",\n      thirdPartyId:\"23423432\"\n    },\n    experienceCloud: {\n      analytics: {\n        logging: \"server_side\",\n        supplementalDataId: \"7D3AA246CC99FD7F-1B3DD2E75595498E\",\n        trackingServer: \"jimsbrims.sc.omtrds.net\"\n      }\n    }, \n    execute: {\n      mboxes: [{\n        name: \"some-mbox\"\n      }]\n    }       \n  }\n})\n.then(console.log)\n.catch(console.error);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`ClientConfig config = ClientConfig.builder()\n  .client(\"acmeclient\")\n  .organizationId(\"1234567890@AdobeOrg\")\n  .build();\nTargetClient targetClient = TargetClient.create(config);\n\nVisitorId id = new VisitorId()\n  .tntId(\"d359234570e044f14e1faeeba02d6ab23439914e.35_0\")\n  .thirdPartyId(\"B234A029348\")\n  .marketingCloudVisitorId(\"10527837386392355901041112038610706884\");\nContext context = new Context().channel(ChannelType.WEB);\nMboxRequest mbox = new MboxRequest()\n  .name(\"some-mbox\")\n  .index(0);\nExecuteRequest executeRequest = new ExecuteRequest()\n  .mboxes(Arrays.asList(mbox));\n\nAnalyticsRequest analyticsRequest =\n    new AnalyticsRequest()\n        .trackingServer(\"jimsbrims.sc.omtrds.net\")\n        .logging(LoggingType.SERVER_SIDE)\n        .supplementalDataId(\"7D3AA246CC99FD7F-1B3DD2E75595498E\");\nExperienceCloud expCloud =\n    new ExperienceCloud()\n        .setAnalytics(analyticsRequest);\n\nTargetDeliveryRequest request = TargetDeliveryRequest.builder()\n  .context(context)\n  .execute(executeRequest)\n  .experienceCloud(expCloud)\n  .build();\n\nTargetDeliveryResponse offers = targetClient.getOffers(request);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"user-retrieves-analytics-payload-from-adobe-target\"\n    }}>{`User retrieves analytics payload from Adobe Target`}</h2>\n    <p>{`A user can retrieve the Adobe Analytics payload for a given mbox, then send it to Adobe Analytics via the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/analytics-1.4-apis/blob/master/docs/data-insertion-api/index.md\"\n      }}>{`Data Insertion API`}</a>{`. When an Adobe Target request is fired, pass `}<inlineCode parentName=\"p\">{`client_side`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`logging`}</inlineCode>{` field in the request. This will return a payload if the specified mbox is present in an activity that is using Analytics as the reporting source.`}</p>\n    <h3 {...{\n      \"id\": \"nodejs-1\"\n    }}>{`Node.js`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`const TargetClient = require(\"@adobe/target-nodejs-sdk\");\nconst CONFIG = {\n  client: \"acmeclient\",\n  organizationId: \"1234567890@AdobeOrg\"\n};\nconst targetClient = TargetClient.create(CONFIG);\ntargetClient.getOffers({\n  request: {     \n    id: {\n      marketingCloudVisitorId : \"2304820394812039\",\n      tntId: \"d359234570e044f14e1faeeba02d6ab23439914e.35_0\",\n      thirdPartyId:\"23423432\"\n    },\n    experienceCloud: {\n      analytics: {\n        logging: \"client_side\"\n      }\n    },  \n    execute: {\n      mboxes: [{\n        name: \"some-mbox\"\n      }]\n    }       \n  }\n})\n.then(console.log)\n.catch(console.error);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`ClientConfig config = ClientConfig.builder()\n  .client(\"acmeclient\")\n  .organizationId(\"1234567890@AdobeOrg\")\n  .build();\nTargetClient targetClient = TargetClient.create(config);\n\nVisitorId id = new VisitorId()\n  .tntId(\"d359234570e044f14e1faeeba02d6ab23439914e.35_0\")\n  .thirdPartyId(\"B234A029348\")\n  .marketingCloudVisitorId(\"10527837386392355901041112038610706884\");\nContext context = new Context().channel(ChannelType.WEB);\nMboxRequest mbox = new MboxRequest()\n  .name(\"some-mbox\")\n  .index(0);\nExecuteRequest executeRequest = new ExecuteRequest()\n  .mboxes(Arrays.asList(mbox));\n\nAnalyticsRequest analyticsRequest =\n    new AnalyticsRequest()\n        .logging(LoggingType.CLIENT_SIDE);\nExperienceCloud expCloud =\n    new ExperienceCloud()\n        .setAnalytics(analyticsRequest);\n\nTargetDeliveryRequest request = TargetDeliveryRequest.builder()\n  .context(context)\n  .execute(executeRequest)\n  .experienceCloud(expCloud)\n  .build();\n\nTargetDeliveryResponse offers = targetClient.getOffers(request);\n`}</code></pre>\n    <p>{`Once you have specified `}<inlineCode parentName=\"p\">{`logging = client_side`}</inlineCode>{`, you will receive the payload in the mbox field.`}</p>\n    <p>{`If the response from Target contains anything in the `}<inlineCode parentName=\"p\">{`analytics -> payload`}</inlineCode>{` property, forward it as it is to Adobe Analytics. Adobe Analytics knows how to process this payload. This can be done in a GET request using the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`https://{datacollectionhost.sc.omtrdc.net}/b/ss/{rsid}/0/CODEVERSION?pe=tnt&tnta={payload}&mid={mid}&vid={vid}&aid={aid}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"query-string-parameters-and-variables\"\n    }}>{`Query String Parameters and Variables`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`rsid`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The report suite ID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`pe`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Page event. Always set to `}<inlineCode parentName=\"td\">{`tnt`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`tnta`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Analytics payload returned by Target server in `}<inlineCode parentName=\"td\">{`analytics -> payload -> tnta`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mid`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Marketing Cloud Visitor ID`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"required-header-values\"\n    }}>{`Required Header Values`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Host`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Analytics data collection server (eg: `}<inlineCode parentName=\"td\">{`adobeags421.sc.omtrdc.net`}</inlineCode>{`)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"sample-a4t-data-insertion-http-get-call\"\n    }}>{`Sample A4T Data Insertion HTTP Get Call`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`https://demo.sc.omtrdc.net/b/ss/myCustomRsid/0/MOBILE-1.0?pe=tnt&tnta=285408:0:0|2&mid=2304820394812039\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}