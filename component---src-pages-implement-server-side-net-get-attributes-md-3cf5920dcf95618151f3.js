"use strict";(self.webpackChunktarget_developers=self.webpackChunktarget_developers||[]).push([[2165],{59531:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return x}});var n,r=a(87462),l=a(63366),d=(a(15007),a(64983)),m=a(91515),i=["components"],o={},u=(n="CodeBlock",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)}),s={_frontmatter:o},p=m.Z;function x(e){var t=e.components,a=(0,l.Z)(e,i);return(0,d.mdx)(p,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"get-attributes"},"Get Attributes"),(0,d.mdx)("h2",{id:"description"},"Description"),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"GetAttributes()")," is used to fetch experimentation and personalized experiences from Target and extract attribute values."),(0,d.mdx)("h2",{id:"method"},"Method"),(0,d.mdx)(u,{slots:"heading, code",repeat:"1",languages:"dotnet",mdxType:"CodeBlock"}),(0,d.mdx)("h3",{id:"getattributes"},"getAttributes"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-dotnet"},"TargetAttributes TargetClient.GetAttributes(TargetDeliveryRequest targetRequest, params string[] mboxes)\n")),(0,d.mdx)("h2",{id:"parameters"},"Parameters"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Name"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Required"),(0,d.mdx)("th",{parentName:"tr",align:null},"Default"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"targetRequest"),(0,d.mdx)("td",{parentName:"tr",align:null},"TargetDeliveryRequest"),(0,d.mdx)("td",{parentName:"tr",align:null},"No"),(0,d.mdx)("td",{parentName:"tr",align:null},"null"),(0,d.mdx)("td",{parentName:"tr",align:null},"The same target request as used for ",(0,d.mdx)("a",{parentName:"td",href:"get-offers.md"},"Get Offers​"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"mboxNames"),(0,d.mdx)("td",{parentName:"tr",align:null},"params string[]"),(0,d.mdx)("td",{parentName:"tr",align:null},"No"),(0,d.mdx)("td",{parentName:"tr",align:null},"null"),(0,d.mdx)("td",{parentName:"tr",align:null},"A parameter array of mbox names")))),(0,d.mdx)("h2",{id:"result"},"Result"),(0,d.mdx)("p",null,"A ",(0,d.mdx)("inlineCode",{parentName:"p"},"TargetAttributes")," object is returned from ",(0,d.mdx)("inlineCode",{parentName:"p"},"TargetClient.GetAttributes()")," which has the following properties and methods:"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Property/Method"),(0,d.mdx)("th",{parentName:"tr",align:null},"Return Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"Response"),(0,d.mdx)("td",{parentName:"tr",align:null},"TargetDeliveryResponse"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the response object normally returned by ",(0,d.mdx)("a",{parentName:"td",href:"get-offers.md"},"Get Offers​"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"ToDictionary"),(0,d.mdx)("td",{parentName:"tr",align:null},"IReadOnlyDictionary"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns a dictionary of dictionaries with key value pairs grouped by mbox names")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"ToMboxDictionary(mboxName)"),(0,d.mdx)("td",{parentName:"tr",align:null},"IReadOnlyDictionary"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns a dictionary with key value pairs for the provided mbox")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"GetBoolean(mboxName, key, defaultValue)"),(0,d.mdx)("td",{parentName:"tr",align:null},"bool"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"GetString(mboxName, key, defaultValue)"),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"GetInteger(mboxName, key, defaultValue)"),(0,d.mdx)("td",{parentName:"tr",align:null},"int"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"GetDouble(mboxName, key, defaultValue)"),(0,d.mdx)("td",{parentName:"tr",align:null},"double"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"GetValue(mboxName, key, defaultValue)"),(0,d.mdx)("td",{parentName:"tr",align:null},"T"),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value for a specified mbox name and attribute key")))),(0,d.mdx)("h2",{id:"example"},"Example"),(0,d.mdx)(u,{slots:"heading, code",repeat:"1",languages:"dotnet",mdxType:"CodeBlock"}),(0,d.mdx)("h3",{id:"net"},".","NET"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-dotnet"},'var targetClientConfig = new TargetClientConfig.Builder("acmeClient", "ABCDEF012345677890ABCDEF0@AdobeOrg")\n    .Build();\n\nvar targetClient = TargetClient.Create(targetClientConfig);\n\nvar mboxRequests = new List<MboxRequest> { new (index: 1, name: "a1-serverside-ab") };\n\nvar targetDeliveryRequest = new TargetDeliveryRequest.Builder()\n    .Build();\n\nvar offerAttributes = targetClient.GetAttributes(targetDeliveryRequest, "demo-engineering-flags");\n\n//returns just the value of searchProviderId from the mbox offer\nvar searchProviderId = offerAttributes.GetString("demo-engineering-flags", "searchProviderId");\n\n//returns a simple Dictionary representing the mbox offer\nvar engineeringFlags = offerAttributes.ToMboxDictionary("demo-engineering-flags");\n\n//  the value of engineeringFlags looks like this\n//  {\n//      "cdnHostname": "cdn.cloud.corp.net",\n//      "searchProviderId": 143,\n//      "hasLegacyAccess": false\n//  }\n\nvar assetUrl = $"http://{engineeringFlags["cdnHostname"]}/path/to/asset";\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-implement-server-side-net-get-attributes-md-3cf5920dcf95618151f3.js.map