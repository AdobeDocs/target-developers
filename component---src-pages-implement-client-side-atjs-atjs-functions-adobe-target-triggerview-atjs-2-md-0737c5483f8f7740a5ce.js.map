{"version":3,"file":"component---src-pages-implement-client-side-atjs-atjs-functions-adobe-target-triggerview-atjs-2-md-0737c5483f8f7740a5ce.js","mappings":"gNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,qDADR,6DAGA,8HAA+G,uBAAYC,WAAW,KAAvB,8BAA/G,qLAA0W,uBAAYA,WAAW,KAAvB,8BAA1W,mGAAmhB,cAAGA,WAAW,IAC7hB,KAAQ,oHADugB,0CAAnhB,MAGA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,sHAAuG,eAAIC,WAAW,KAAf,KAAvG,MACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,QAGA,eAAIA,WAAW,KACb,MAAS,MADX,+MAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,OAGA,eAAIA,WAAW,KACb,MAAS,SAGb,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,mBAGA,eAAIA,WAAW,KACb,MAAS,MADX,YAGA,eAAIA,WAAW,KACb,MAAS,MADX,OAGA,eAAIA,WAAW,KACb,MAAS,OACR,mBAAQA,WAAW,MAAnB,SAFH,mIAEgL,oBAFhL,oDAE0O,uBAAYA,WAAW,MAAvB,eAF1O,2DAE6V,qBAAM,mBAAQA,WAAW,MAAnB,UAFnW,gLAMN,eACE,GAAM,gBADR,kBAGA,mBAAG,uBAAYA,WAAW,KAAvB,iBAAH,gHACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,4CAIL,eACE,GAAM,iBADR,mBAGA,mBAAG,uBAAYA,WAAW,KAAvB,iBAAH,wFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,0DAMR,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://target-developers/./src/pages/implement/client-side/atjs/atjs-functions/adobe-target-triggerview-atjs-2.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobetargettriggerview-viewname-options---atjs-2x\"\n    }}>{`adobe.target.triggerView (viewName, options) - at.js 2.x`}</h1>\n    <p>{`This function can be called whenever a new page is loaded or when a component on a page is re-rendered. `}<inlineCode parentName=\"p\">{`adobe.target.triggerView()`}</inlineCode>{` should be implemented for single page applications (SPAs) in order to use the Visual Experience Composer (VEC) to create A/B Tests and Experience Targeting (XT) activities. If `}<inlineCode parentName=\"p\">{`adobe.target.triggerView()`}</inlineCode>{` is not implemented on the site, the VEC cannot be utilized for SPA. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"/target-developers/src/pages/implement/client-side/atjs/how-to-deployatjs/target-atjs-single-page-application.md\"\n      }}>{`Single Page Application implementation`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This function was introduced with at.js 2.x. This function is not available for at.js version 1.`}<em parentName=\"p\">{`x`}</em>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required?`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`viewName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pass in any name as a string type that you want to represent your view. This view name appears in the Modifications panel of the VEC for marketers to create actions and run their A/B and XT activities.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options > page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`TRUE:`}</strong>{` Default value of page is true. When page=true, notifications are sent to the Target backend for incrementing impression count.`}<br />{`A notification is always sent by default when a `}<inlineCode parentName=\"td\">{`triggerView`}</inlineCode>{` is called, except when options > page is set to false.`}<br /><strong parentName=\"td\">{`FALSE:`}</strong>{` When page=false, notifications are not sent for incrementing impression count. This should be used when you want to only re-render a component on a page with an offer.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example-true\"\n    }}>{`Example: True`}</h2>\n    <p><inlineCode parentName=\"p\">{`triggerView()`}</inlineCode>{` call to send a notification to the Target backend for incrementing activity impressions and other metrics.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`adobe.target.triggerView(\"homeView\")\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-false\"\n    }}>{`Example: False`}</h2>\n    <p><inlineCode parentName=\"p\">{`triggerView()`}</inlineCode>{` call to not have notifications sent to the Target backend for impression counting.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`adobe.target.triggerView(\"homeView\", {page: false})\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}